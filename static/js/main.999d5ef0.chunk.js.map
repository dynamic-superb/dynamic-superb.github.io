{"version":3,"sources":["components/Sections.js","components/AdaptiveLink.js","components/Buttons.js","components/Utilies.js","components/Theme.js","Data.js","components/Titles.js","hooks/markdown-file.js","components/MarkdownBlock.js","Landing.js","components/LiftedOnHover.js","Tasks.js","components/Drawer.js","context/auth-context.js","components/NavigationBar.js","leaderboardData.js","Leaderboard.js","components/FormTextfield.js","components/PublicForm.js","components/HiddenForm.js","components/Modal.js","Profile.js","hooks/auth-hook.js","TaskDetails.js","Docs.js","App.js","reportWebVitals.js","index.js"],"names":["SectionTemplate","props","theme","useTheme","anchorKey","remainedProps","_jsxs","React","Fragment","children","_jsx","Box","id","position","top","spacing","visibility","Section","margin","SubSection","useStyles","makeStyles","AdaptiveLink","link","Link","HashLink","location","useLocation","component","fontWeight","pathname","includes","className","href","target","to","descriptionButton","display","pseudoOutlinedPrimaryButton","backgroundColor","border","concat","fade","palette","primary","main","borderRadius","shape","innerButton","paddingLeft","paddingRight","DescriptionButton","name","classes","Button","size","variant","capitalizeFirstLetter","string","charAt","toUpperCase","slice","Strong","fontStyle","mainTheme","grey","text","blueGrey","secondary","constrainedTheme","update","$set","red","lessConstrainedTheme","orange","unconstrainedTheme","green","submitFormTheme","domains","description","tasks","public_task_columnInfo","LockIcon","createMuiTheme","LockOpenIcon","AllInclusive","PR_per_public","header","width","higherBetter","isScore","type","KS_acc_public","IC_acc_public","SID_acc_public","ER_acc_public","ERfold1_acc_public","ERfold2_acc_public","ERfold3_acc_public","ERfold4_acc_public","ERfold5_acc_public","ASR_wer_public","ASR_LM_wer_public","QbE_mtwv_public","SF_f1_public","SF_cer_public","SV_eer_public","SD_der_public","ST_bleu_public","SE_pesq_public","SE_stoi_public","SS_sisdri_public","hidden_task_columnInfo","PR_per_hidden_dev","SID_acc_hidden_dev","ER_acc_hidden_dev","ASR_wer_hidden_dev","QbE_map_hidden_dev","QbE_eer_hidden_dev","SV_eer_hidden_dev","SD_der_hidden_dev","ST_bleu_hidden_dev","SS_sisdri_hidden_dev","SE_stoi_hidden_dev","SE_pesq_hidden_dev","map","item","TitleTemplate","title","titleColor","titleVariant","titleComponent","descriptionColor","descriptionVariant","textMaxWidth","divider","titleAlign","maxWidth","textAlign","Typography","color","Divider","Title","useMarkdown","url","markdownText","setMarkdownText","useState","useEffect","fetch","then","res","fetchMarkdownText","newUrl","replacements","MarkdownBlock","mdFile","landing","align","ReactMarkdown","remarkPlugins","remarkMath","remarkGfm","rehypePlugins","rehypeKatex","components","code","_ref","node","inline","match","exec","SyntaxHighlighter","String","replace","language","PreTag","style","colorTheme","showLineNumbers","padding","fontSize","a","_ref2","rel","replaceAll","img","_ref3","src","alt","p","_ref4","level","toString","h1","_ref5","_Fragment","h2","_ref6","h3","_ref7","h4","_ref8","h5","_ref9","Landing","_","useRef","useMediaQuery","breakpoints","up","Grid","container","justify","filename","xs","sm","md","LiftedPaper","elevation","liftDegree","hover","setHover","Paper","onMouseOver","prev","onMouseOut","taskName","marginBottom","Tasks","state","setState","left","bottom","right","direction","toLowerCase","taskCard","list","fullList","SwipeableTemporaryDrawer","toggleDrawer","anchor","open","event","key","clsx","role","onKeyDown","List","items","onClick","SwipeableDrawer","onClose","onOpen","AuthContext","createContext","isLoggedIn","userId","token","isAdmin","email","login","logout","HideOnScroll","window","trigger","useScrollTrigger","undefined","Slide","appear","in","ScrollTop","history","useHistory","disableHysteresis","threshold","Zoom","ownerDocument","document","querySelector","scrollIntoView","block","push","root","toolbar","tool","paddingTop","paddingBottom","button","marginLeft","marginRight","background","boxShadow","cursor","navlink","LiftingBarButton","withWidth","tableControlRef","anchorElUser","setAnchorElUser","useContext","handleOpenUserMenu","currentTarget","handleCloseUserMenu","items1","Array","isArray","sx","flexGrow","Menu","mt","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","onMouseLeave","MenuItem","CssBaseline","AppBar","Toolbar","alignItems","lg","current","click","Hidden","mdDown","lgUp","Drawer","onclick","ListItem","ListItemText","Fab","KeyboardArrowUpIcon","raw_data","SpeechDetection","LJSpeech","SpeechTextMatching","SpokenTermDetection","EnhancementDetection","NoiseDetection","NoiseSNRLevelPrediction","ReverberationDetection","DialogueEmotionClassification","DailyTalk","EmotionRecognition","MultimodalEmotionlinesDataset","SpoofDetection","ASVspoof2015","ASVspoof2017","DialogueActClassification","DialogueActPairing","SpeakerCounting","SpeakerVerification","VCTK","Whisper","raw_data_seen","instances","Instance","raw_data_unseen","column_fields","models","columns","field","column","headerAlign","headerClassName","rows","idCounter","model","row","task","Object","keys","sum","instance","score","Math","round","length","columns_transpose","renderCell","params","value","best","acc_to_float","acc","parseFloat","rows_transpose_seen","rows_transpose_unseen","rows_transpose_all","index","instances_seen","instances_unseen","underscore","indexOf","dataset","row_seen","Task","Dataset","row_unseen","row_all","reduce","b","StyledDataGrid","styled","DataGrid","borderRight","App","setrows","setcolumns","setValue","setAnchorEl","infoOpen","infoId","height","justifyContent","gap","IconButton","HelpIcon","Popover","CloseInfo","Tabs","indicatorColor","textColor","onChange","handleChange","newValue","Tab","label","disableRowSelectionOnClick","hideFooter","paper","textField","marginTop","modal","div","_templateObject","_taggedTemplateLiteral","logoutTimer","TaskDetails","useParams","Docs","docsList","narrowViewport","LoginButton","setWidth","setHeight","navbarHeight","setNavbarHeight","setViewPort","innerWidth","innerHeight","getElementById","offsetHeight","addEventListener","routes","Switch","Route","path","exact","Redirect","from","LeaderBoard","Router","NavigationBar","useAuth","setToken","setIsAdmin","setEmail","tokenExpirationDate","setTokenExpirationDate","signOut","useGoogleLogout","clientId","onLogoutSuccess","onFailure","useCallback","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","ThemeProvider","reportWebVitals","rootElement","hasChildNodes","hydrate","render"],"mappings":"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","file":"static/js/main.999d5ef0.chunk.js","sourcesContent":["import React from \"react\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { Box } from \"@material-ui/core\";\n\nfunction SectionTemplate(props) {\n  const theme = useTheme();\n  const { anchorKey, ...remainedProps } = props;\n\n  return (\n    <React.Fragment>\n      <Box\n        id={anchorKey}\n        position=\"relative\"\n        top={theme.spacing(-4)}\n        visibility=\"hidden\"\n      ></Box>\n      <Box {...remainedProps} />\n    </React.Fragment>\n  );\n}\n\nfunction Section(props) {\n  const theme = useTheme();\n\n  return <SectionTemplate margin={theme.spacing(4, \"auto\", 8)} {...props} />;\n}\n\nfunction SubSection(props) {\n  const theme = useTheme();\n\n  return <SectionTemplate margin={theme.spacing(4, \"auto\", 6)} {...props} />;\n}\n\nfunction SubSubSection(props) {\n  const theme = useTheme();\n\n  return <SectionTemplate margin={theme.spacing(4, \"auto\", 4)} {...props} />;\n}\n\nexport { Section, SubSection, SubSubSection };\n","import React from 'react';\nimport { HashLink } from 'react-router-hash-link';\nimport {\n  useLocation,\n} from \"react-router-dom\";\nimport { Box } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n}));\n\n\nexport default function AdaptiveLink(props) {\n  const { link, children } = props;\n  const Link = link ? HashLink : Box;\n  const location = useLocation();\n  const theme = useTheme();\n  const classes = useStyles();\n\n  return (\n    <Box component=\"span\" fontWeight={location.pathname.includes(link) ? \"bold\" : \"inherit\"}>\n      {\n        (link ? link : \"\").includes(\"http\") ?\n          <a className=\"unlink\" href={link ? link : \"\"} target=\"_blank\">\n            {children}\n          </a>\n          :\n          <Link className=\"unlink\" to={link ? link : \"\"}>\n            {children}\n          </Link>\n      }\n    </Box>\n  )\n}","import React from \"react\";\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\nimport { Box, Grid, Button, Divider } from \"@material-ui/core\";\n\nimport AdaptiveLink from \"./AdaptiveLink\";\n\nconst useStyles = makeStyles((theme) => ({\n  descriptionButton: {\n    display: \"inline-block\",\n    margin: theme.spacing(1),\n  },\n\n  pseudoOutlinedPrimaryButton: {\n    backgroundColor: \"transparent\",\n    border: `1px solid ${fade(theme.palette.primary.main, 0.5)}`,\n    borderRadius: theme.shape.borderRadius,\n    display: \"inline-block\",\n  },\n\n  innerButton: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n}));\n\nfunction DescriptionButton(props) {\n  const { name, link } = props;\n  const classes = useStyles();\n  return (\n    <AdaptiveLink link={link}>\n      <Button\n        size=\"small\"\n        variant=\"outlined\"\n        className={classes.descriptionButton}\n      >\n        {name}\n      </Button>\n    </AdaptiveLink>\n  );\n}\n\nfunction MultiLinkButton(props) {\n  const {\n    buttons = [\n      {\n        name: \"rules\",\n        link: \"/submit#rules\",\n      },\n      {\n        name: \"submit\",\n        link: \"/submit#submit\",\n      },\n    ],\n  } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.pseudoOutlinedPrimaryButton}>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={0}\n      >\n        {buttons.map(({ name, link }, index) => (\n          <React.Fragment>\n            <Grid item>\n              <AdaptiveLink link={link}>\n                <Button\n                  disabled={!link}\n                  color=\"primary\"\n                  className={classes.innerButton}\n                >\n                  {name}\n                </Button>\n              </AdaptiveLink>\n            </Grid>\n            {index < buttons.length - 1 && (\n              <Grid item>\n                <Box height={28}>\n                  <Divider orientation=\"vertical\" />\n                </Box>\n              </Grid>\n            )}\n          </React.Fragment>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nexport { DescriptionButton, MultiLinkButton };\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction CapitalizeLetter(string) {\n  return string.replace(/^\\w|-\\w/g, c => c.toUpperCase()).replace(/-/g, ' ');\n}\n\nfunction Strong(props) {\n  return (\n    <Box component=\"span\" fontWeight=\"bold\" fontStyle=\"italic\">\n      {props.children}\n    </Box>\n  );\n}\n\nfunction is_number_and_not_nan(value) {\n  return (typeof (value) == \"number\") && (!isNaN(value))\n}\n\nfunction NumericalSort(rowA, rowB, columnId, desc) {\n  const valueA = rowA.original[columnId];\n  const valueB = rowB.original[columnId];\n  const isNumberA = is_number_and_not_nan(valueA)\n  const isNumberB = is_number_and_not_nan(valueB)\n  if (!isNumberA && isNumberB) {\n    return desc ? -1 : 1;\n  }\n  else if (isNumberA && !isNumberB) {\n    return desc ? 1 : -1;\n  }\n  else if (!isNumberA && !isNumberB) {\n    if (desc) {\n      return rowA.original[\"submitName\"] < rowB.original[\"submitName\"] ? 1 : -1\n    }\n    else {\n      return rowA.original[\"submitName\"] < rowB.original[\"submitName\"] ? -1 : 1\n    }\n  }\n  else {\n    return valueA > valueB ? 1 : -1;\n  }\n}\n\nexport { capitalizeFirstLetter, Strong, NumericalSort, is_number_and_not_nan, CapitalizeLetter };\n","import { blueGrey, grey, red, orange, green } from \"@material-ui/core/colors\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport update from \"immutability-helper\";\n\nconst mainTheme = {\n    palette: {\n        primary: {\n            main: grey[100],\n        },\n        text: {\n            primary: blueGrey[600],\n            secondary: grey[600],\n        },\n    },\n};\n\nconst constrainedTheme = update(mainTheme, {\n    palette: {\n        primary: {\n            main: { $set: red[400] },\n        },\n    },\n});\n\nconst lessConstrainedTheme = update(mainTheme, {\n    palette: {\n        primary: {\n            main: { $set: orange[400] },\n        },\n    },\n});\n\nconst unconstrainedTheme = update(mainTheme, {\n    palette: {\n        primary: {\n            main: { $set: green[400] },\n        },\n    },\n});\n\nconst submitFormTheme = update(mainTheme, {\n    palette: {\n        primary: {\n            main: { $set: blueGrey[600] },\n        },\n    },\n});\n\nexport {\n    mainTheme,\n    constrainedTheme,\n    lessConstrainedTheme,\n    unconstrainedTheme,\n    submitFormTheme,\n};\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport AllInclusive from \"@material-ui/icons/AllInclusive\";\n\nimport {\n    constrainedTheme,\n    lessConstrainedTheme,\n    unconstrainedTheme,\n    submitFormTheme,\n} from \"./components/Theme\";\nimport { Strong } from \"./components/Utilies\";\n\nconst subscribe_link = \"https://forms.gle/sVMWx9FHjL4DvK3K8\"\n\nconst domains = [\n    {\n        name: \"Content\",\n        description: \"Content description\",\n        tasks: [\n            {\n                name: \"Language Identification\",\n                description:\n                    \"Language Identification task is aimed to determine the language spoken in a given speech recording.\\\n                    Currently, we are using the VoxForge Dataset for this task.\",\n            },\n            {\n                name: \"Speech Command Recognition\",\n                description:\n                    \"Speech Command Recognition aims to identify the spoken command.\\\n                    Currently, datasets utilized for this task is the Google Speech Commands V1 datset.\",\n            },\n            {\n                name: \"Speech Detection\",\n                description:\n                    \"Speech Detection aims to identify whether the given audio clip contains real speech or not.\\\n                    Currently, datasets utilized for this task is the LJSpeech dataset, LibriSpeech-TestClean and LibriSpeech-TestOther dataset.\",\n            },\n            {\n                name: \"Speech Text Matching\",\n                description:\n                    \"Speech Text Matching aims to determine if the speech and text are matched.\\\n                    Currently, datasets utilized for this task is the LJSpeech dataset, LibriSpeech-TestClean and LibriSpeech-TestOther dataset.\",\n            },\n            {\n                name: \"Spoken Term Detection\",\n                description:\n                    \"Spoken Term Detection aims to check for the existence of the given word in the speech.\\\n                    Currently, datasets utilized for this task is the LJSpeech dataset, LibriSpeech-TestClean and LibriSpeech-TestOther dataset.\",\n            },\n        ],\n    },\n    {\n        name: \"Speaker\",\n        description: \"Speaker description\",\n        tasks: [\n            {\n                name: \"Multi-Speaker Detection\",\n                description:\n                    \"MultiSpeaker Detection aims to analyze the speech audio to determine whether there is more than one speaker present in it.\\\n                    Currently, datasets utilized for this task are the LibriSpeech-TestClean dataset and VCTK Dataset.\",\n            },\n            {\n                name: \"Speaker Counting\",\n                description:\n                    \"Speaker Counting aims to identify the total number of speaker in speech audio.\\\n                    Currently, datasets utilized for this task is the LibriTTS-TestClean dataset.\",\n            },\n            {\n                name: \"Speaker Verification\",\n                description:\n                    \"Speaker verification aims to verify whether the two given speech audios are from the same speaker.\\\n                    Currently, datasets utilized for this task is the LibriSpeech-TestClean dataset and the VCTK dataset.\",\n            },\n        ],\n    },\n    {\n        name: \"Semantics\",\n        description: \"Semantics description\",\n        tasks: [\n            {\n                name: \"Dialogue Act Classification\",\n                description:\n                    \"Dialogue act classification aims to identify the primary purpose or function of an utterance within its dialogue context.\\\n                    Currently, the DailyTalk Dataset is the main dataset used for this task.\",\n            },\n            {\n                name: \"Dialogue Act Pairing\",\n                description:\n                    \"Dialogue act pairing involves assessing the congruence of dialogue acts—that is, whether a response dialogue act is appropriate given a query dialogue act.\\\n                    We use the DailyTalk Dataset in this task.\",\n            },\n            {\n                name: \"Intent Classification\",\n                description:\n                    \"Intent classification aims to identify the actionable item behind a spoken message.\\\n                    Currently, we utilize the FluentSpeechCommands Dataset for this task.\",\n            },\n            {\n                name: \"Sarcasm Detection\",\n                description:\n                    \"Sarcasm Detection aims to detect if the sarcasm or the irony present in the speech audio.\\\n                    Currently, datasets utilized for this task is the MUStARD dataset.\",\n            },\n        ],\n    },\n    {\n        name: \"Degradation\",\n        description: \"Degradation description\",\n        tasks: [\n            {\n                name: \"Enhancement Detection\",\n                description:\n                    \"Enhancement detection is a task focused on determining whether a given audio has been created or modified by a speech enhancement model.\\\n                    Currently, the project employs the LibriTTS-TestClean dataset for this task.\",\n            },\n            {\n                name: \"Noise Detection\",\n                description:\n                    \"Noise Detection aims to idenetify if the speech audio is clean or mixed with noises.\\\n                    Currently, datasets utilized for this task are the LJSpeech dataset and VCTK Dataset , and Musan Dataset provides the noise data.\",\n            },\n            {\n                name: \"Noise SNR Level Prediction\",\n                description: \"Noise SNR Level Prediction aims to predict the signal-to-noise ratio of the speech audio.\\\n                Currently, datasets utilized for this task is the VCTK Dataset, and Musan Dataset provides the noise data.\"\n            },\n            {\n                name: \"Reverberation Detection\",\n                description: \"Reverberation Detection aims to detect if the speech audio is clean or mixed with room impulse responses (RIRs) and noises, that is to say reverberation noises.\\\n                Currently, datasets utilized for this task are the LJSpeech dataset and VCTK dataset , and RIRs Noises dataset provides the reverberation noises.\"\n            },\n        ],\n    },\n    {\n        name: \"Paralinguistics\",\n        description: \"Paralinguistics description\",\n        tasks: [\n            {\n                name: \"Accent Classification\",\n                description:\n                    \"Accent classification involves the recognition and classification of specific speech accents.\\\n                    Currently, the AccentDB Extended Dataset is the only dataset utilized for this task.\",\n            },\n            {\n                name: \"Dialogue Emotion Classification\",\n                description:\n                    \"Dialogue emotion classification is a task that assesses an AI model's ability to identify the most suitable emotion in a given dialogue extract.\\\n                    In this context, we use the DailyTalk Dataset as our primary data source.\",\n            },\n            {\n                name: \"Emotion Recognition\",\n                description:\n                    \"Emotion recognition aims to identify the most appropriate emotional category for a given utterance.\\\n                    Currently, the Multimodal EmotionLines Dataset is the only dataset utilized for this task.\",\n            },\n            {\n                name: \"How Far Are You\",\n                description:\n                    \"The HowFarAreYou task aims to determine the distance of the speaker from the source of sound. It primarily involves using the 3DSpeaker Dataset.\",\n            },\n            {\n                name: \"Spoof Detection\",\n                description:\n                    \"Spoof Detection aims to classify whether the given utterance is a spoofed voice or an authentic recording.\\\n                    Currently, datasets utilized for this task is the ASVspoof 2015 dataset and ASVspoof 2017 dataset.\",\n            },\n            {\n                name: \"Stress Detection\",\n                description:\n                    \"Stress Detection aims to determine the stress placement in English vocabulary. Currently, datasets utilized for this task is the MIR-SD dataset.\",\n            },\n        ],\n    },\n    {\n        name: \"Audio\",\n        description: \"Audio description\",\n        tasks: [\n            {\n                name: \"Accent Classification\",\n                description:\n                    \"Bird sound detection is an interesting task that aims to identify the presence or absence of bird sounds in a given speech.\\\n                    The main dataset used for this task is the Warblrb10k Dataset\",\n            },\n            {\n                name: \"Chord Classification\",\n                description:\n                    \"Chord classification is a crucial task for understanding and analyzing music.\\\n                    This endeavor focuses on determining whether a given tune for piano or guitar is in major or minor key.\\\n                    Currently, the Acoustic Guitar and Piano Dataset is being used for this task.\",\n            },\n            {\n                name: \"Environmental Sound Classification\",\n                description:\n                    \"Environmental Sound Classification (ESC) focuses on recognizing and classifying sounds that originate from the environment.\\\n                    At present, the ESC50 Dataset is specifically used for accomplishing this task in the Dynamic-SUPERB benchmark.\",\n            },\n        ],\n    },\n];\n\nconst tracks = [\n    {\n        name: \"constrained\",\n        rules: (\n            <span>\n                A fair comparison between{\" \"}\n                <Strong>frozen representations</Strong> by enforcing the same\n                downstream model in each task. Only a few hyper-paramters for\n                training are allowed to tuned.\n            </span>\n        ),\n        submit: \"Make sure to read the rules before submitting.\",\n        Icon: LockIcon,\n        theme: createMuiTheme(constrainedTheme),\n    },\n    {\n        name: \"less-constrained\",\n        rules: (\n            <span>\n                A comparison between <Strong>frozen representations</Strong>{\" \"}\n                with customized but limited-resource downstream models. The\n                details of downstream models are reported along with\n                submissions.\n            </span>\n        ),\n        submit: false,\n        Icon: LockOpenIcon,\n        theme: createMuiTheme(lessConstrainedTheme),\n    },\n    {\n        name: \"unconstrained\",\n        rules: (\n            <span>\n                The track does not limit any approach for solving SUPERB tasks\n                as long as it in principle utilizes only{\" \"}\n                <Strong>a single shared model</Strong> with limited\n                task-specific parameters.\n            </span>\n        ),\n        submit: false,\n        Icon: AllInclusive,\n        theme: createMuiTheme(unconstrainedTheme),\n    },\n];\n\n\nconst leaderboard_selections = [\n    {\n        name: \"all\",\n        theme: createMuiTheme(submitFormTheme),\n    },\n    {\n        name: \"constrained\",\n        theme: createMuiTheme(constrainedTheme),\n    },\n    {\n        name: \"less-constrained\",\n        theme: createMuiTheme(lessConstrainedTheme),\n    },\n    {\n        name: \"unconstrained\",\n        theme: createMuiTheme(unconstrainedTheme),\n    },\n];\n\nconst public_hidden_selections = [\n    {\n        name: \"public\",\n        theme: createMuiTheme(submitFormTheme),\n    },\n    {\n        name: \"hidden\",\n        theme: createMuiTheme(submitFormTheme),\n    },\n];\n\n\nconst public_task_columnInfo = {\n    PR_per_public: {\n        header: \"PR public\",\n        width: 110,\n        higherBetter: false,\n        isScore: true,\n        type: \"number\",\n    },\n    KS_acc_public: {\n        header: \"KS public\",\n        width: 110,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    IC_acc_public: {\n        header: \"IC public\",\n        width: 110,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    SID_acc_public: {\n        header: \"SID public\",\n        width: 110,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    ER_acc_public: {\n        header: \"ER public\",\n        width: 110,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    ERfold1_acc_public: {\n        header: \"ER fold1\",\n        width: 110,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    ERfold2_acc_public: {\n        header: \"ER fold2\",\n        width: 110,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    ERfold3_acc_public: {\n        header: \"ER fold3\",\n        width: 110,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    ERfold4_acc_public: {\n        header: \"ER fold4\",\n        width: 110,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    ERfold5_acc_public: {\n        header: \"ER fold5\",\n        width: 110,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    ASR_wer_public: {\n        header: \"ASR public\",\n        width: 120,\n        higherBetter: false,\n        isScore: true,\n        type: \"number\",\n    },\n    ASR_LM_wer_public: {\n        header: \"ASR-LM public\",\n        width: 140,\n        higherBetter: false,\n        isScore: true,\n        type: \"number\",\n    },\n    QbE_mtwv_public: {\n        header: \"QbE public\",\n        width: 120,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    SF_f1_public: {\n        header: \"SF-F1 public\",\n        width: 130,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    SF_cer_public: {\n        header: \"SF-CER public\",\n        width: 140,\n        higherBetter: false,\n        isScore: true,\n        type: \"number\",\n    },\n    SV_eer_public: {\n        header: \"SV public\",\n        width: 110,\n        higherBetter: false,\n        isScore: true,\n        type: \"number\",\n    },\n    SD_der_public: {\n        header: \"SD public\",\n        width: 110,\n        higherBetter: false,\n        isScore: true,\n        type: \"number\",\n    },\n    ST_bleu_public: {\n        header: \"ST public\",\n        width: 110,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    SE_pesq_public: {\n        header: \"SE-PESQ public\",\n        width: 140,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    SE_stoi_public: {\n        header: \"SE-STOI public\",\n        width: 140,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    SS_sisdri_public: {\n        header: \"SS public\",\n        width: 110,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n}\n\nconst hidden_task_columnInfo = {\n    PR_per_hidden_dev: {\n        header: \"PR hidden dev\",\n        width: 140,\n        higherBetter: false,\n        isScore: true,\n        type: \"number\",\n    },\n    SID_acc_hidden_dev: {\n        header: \"SID hidden dev\",\n        width: 140,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    ER_acc_hidden_dev: {\n        header: \"ER hidden dev\",\n        width: 140,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    ASR_wer_hidden_dev: {\n        header: \"ASR hidden dev\",\n        width: 140,\n        higherBetter: false,\n        isScore: true,\n        type: \"number\",\n    },\n    QbE_map_hidden_dev: {\n        header: \"QbE-MAP hidden dev\",\n        width: 180,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    QbE_eer_hidden_dev: {\n        header: \"QbE-EER hidden dev\",\n        width: 180,\n        higherBetter: false,\n        isScore: true,\n        type: \"number\",\n    },\n    SV_eer_hidden_dev: {\n        header: \"SV hidden dev\",\n        width: 140,\n        higherBetter: false,\n        isScore: true,\n        type: \"number\",\n    },\n    SD_der_hidden_dev: {\n        header: \"SD hidden dev\",\n        width: 140,\n        higherBetter: false,\n        isScore: true,\n        type: \"number\",\n    },\n    ST_bleu_hidden_dev: {\n        header: \"ST hidden dev\",\n        width: 140,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    SS_sisdri_hidden_dev: {\n        header: \"SS hidden dev\",\n        width: 140,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    SE_stoi_hidden_dev: {\n        header: \"SE-STOI hidden dev\",\n        width: 180,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n    SE_pesq_hidden_dev: {\n        header: \"SE-PESQ hidden dev\",\n        width: 180,\n        higherBetter: true,\n        isScore: true,\n        type: \"number\",\n    },\n}\n\nconst individual_submission_columnInfo = {\n    aoeTimeUpload: {\n        header: \"Upolad Time\",\n        width: 160,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    submitName: {\n        header: \"Method\",\n        width: 150,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    modelDesc: {\n        header: \"Description\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    modelURL: {\n        header: \"Model URL\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    download: {\n        header: \"Download\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    task: {\n        header: \"Track\",\n        width: 130,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    showOnLeaderboard: {\n        header: \"Show\",\n        width: 70,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    stride: {\n        header: \"Stride\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"number\",\n    },\n    inputFormat: {\n        header: \"Input Format\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    corpus: {\n        header: \"Corpus\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    paramDesc: {\n        header: \"Parameter Description\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    paramShared: {\n        header: \"Shared parameters\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"number\",\n    },\n    fineTunedParam: {\n        header: \"Fine-tuned parameters\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"number\",\n    },\n    taskSpecParam: {\n        header: \"Task-specific parameters\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"number\",\n    },\n    state: {\n        header: \"State\",\n        width: 70,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    stateInfo: {\n        header: \"State Info\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    submitUUID: {\n        header: \"Submission ID\",\n        width: 300,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    ...public_task_columnInfo,\n};\n\nconst individual_submission_hidden_columnInfo = {\n    aoeTimeUpload: {\n        header: \"Upolad Time\",\n        width: 160,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    submitName: {\n        header: \"Method\",\n        width: 150,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    modelDesc: {\n        header: \"Description\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    task: {\n        header: \"Track\",\n        width: 130,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    showOnLeaderboard: {\n        header: \"Show\",\n        width: 70,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    huggingfaceOrganizationName: {\n        header: \"Organization\",\n        width: 130,\n        higherBetter: undefined,\n        type: \"alphanumeric\"\n    },\n    huggingfaceRepoName: {\n        header: \"Repository\",\n        width: 130,\n        higherBetter: undefined,\n        type: \"alphanumeric\"\n    },\n    huggingfaceCommonHash: {\n        header: \"Commit\",\n        width: 130,\n        higherBetter: undefined,\n        type: \"alphanumeric\"\n    },\n    paramShared: {\n        header: \"Shared parameters\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"number\",\n    },\n    state: {\n        header: \"State\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    stateInfo: {\n        header: \"State Info\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    submitUUID: {\n        header: \"Submission ID\",\n        width: 300,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    ...hidden_task_columnInfo,\n};\n\n\nconst leaderboard_columnInfo = {\n    submitName: {\n        header: \"Method\",\n        width: 150,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    name: {\n        header: \"Name\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    modelDesc: {\n        header: \"Description\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    modelURL: {\n        header: \"URL\",\n        width: 60,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    aoeTimeUpload: {\n        header: \"Upolad Time\",\n        width: 160,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    task: {\n        header: \"Track\",\n        width: 130,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    stride: {\n        header: \"Stride\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"number\",\n    },\n    inputFormat: {\n        header: \"Input Format\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    corpus: {\n        header: \"Corpus\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    paramDesc: {\n        header: \"Parameter Description\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    paramShared: {\n        header: \"Shared parameters\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"number\",\n    },\n    fineTunedParam: {\n        header: \"Fine-tuned parameters\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"number\",\n    },\n    taskSpecParam: {\n        header: \"Task-specific parameters\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"number\",\n    },\n    ...public_task_columnInfo,\n};\n\nconst leaderboard_hidden_columnInfo = {\n    submitName: {\n        header: \"Method\",\n        width: 150,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    modelDesc: {\n        header: \"Description\",\n        width: 150,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    name: {\n        header: \"Name\",\n        width: 130,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    aoeTimeUpload: {\n        header: \"Upolad Time\",\n        width: 160,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    task: {\n        header: \"Track\",\n        width: 130,\n        higherBetter: undefined,\n        type: \"alphanumeric\",\n    },\n    paramShared: {\n        header: \"Shared parameters\",\n        width: 100,\n        higherBetter: undefined,\n        type: \"number\",\n    },\n    ...hidden_task_columnInfo,\n};\n\nconst reference_points = {\n    \"PR_per_public\": [17.989999999999995, 96.47],\n    \"KS_acc_public\": [41.3826674, 96.66],\n    \"IC_acc_public\": [9.649354219, 98.76],\n    \"SID_acc_public\": [20.058174, 9.03e+01],\n    \"ER_acc_public\": [48.23672168, 67.62],\n    \"ASR_wer_public\": [76.82, 96.38],\n    \"QbE_mtwv_public\": [0.0058, 0.0736].map(item => 100 * item),\n    \"SF_f1_public\": [69.64, 89.81],\n    \"SF_cer_public\": [47.06, 78.24],\n    \"SV_eer_public\": [90.44, 94.89],\n    \"SD_der_public\": [89.95, 94.38],\n    \"ST_bleu_public\": [2.32, 20.01],\n    \"SE_pesq_public\": [2.55, 2.64],\n    \"SE_stoi_public\": [93.6, 94.2],\n    \"SS_sisdri_public\": [9.2341, 10.4514],\n    \"PR_per_hidden_dev\": [0.8100076941, 0.1632352551].map(item => 100 * (1 - item)),\n    \"SID_acc_hidden_dev\": [0.4958333373, 0.7983333468].map(item => 100 * item),\n    \"ER_acc_hidden_dev\": [0.4712328911, 0.6794520617].map(item => 100 * item),\n    \"ASR_wer_hidden_dev\": [0.7356, 0.2149418249].map(item => 100 * (1 - item)),\n    \"SV_eer_hidden_dev\": [0.255671, 0.127294].map(item => 100 * (1 - item)),\n    \"SD_der_hidden_dev\": [0.157551825, 0.1048149392].map(item => 100 * (1 - item)),\n    \"QbE_map_hidden_dev\": [0.1860194802, 0.5108585358].map(item => 100 * item),\n    \"QbE_eer_hidden_dev\": [0.3694903255, 0.1780432165].map(item => 100 * (1 - item)),\n    \"ST_bleu_hidden_dev\": [3.2, 23.33],\n    \"SS_sisdri_hidden_dev\": [4.655592075, 8.082589958],\n    \"SE_pesq_hidden_dev\": [1.510035692, 1.567159144],\n    \"SE_stoi_hidden_dev\": [0.8433188677, 0.8520344653].map(item => 100 * item),\n}\n\nconst hidden_dev_set = [\n    \"PR_per_hidden_dev\", \"SID_acc_hidden_dev\", \"ER_acc_hidden_dev\", \"ASR_wer_hidden_dev\", \"QbE_map_hidden_dev\",\n    \"QbE_eer_hidden_dev\", \"SV_eer_hidden_dev\", \"SD_der_hidden_dev\", \"ST_bleu_hidden_dev\",\n    \"SE_pesq_hidden_dev\", \"SE_stoi_hidden_dev\", \"SS_sisdri_hidden_dev\",\n]\n\nconst hidden_test_set = [\n    \"PR_per_hidden_test\", \"SID_acc_hidden_test\", \"ER_acc_hidden_test\", \"ASR_wer_hidden_test\", \"QbE_map_hidden_test\",\n    \"QbE_eer_hidden_test\", \"SV_eer_hidden_test\", \"SD_der_hidden_test\", \"ST_bleu_hidden_test\",\n    \"SE_pesq_hidden_test\", \"SE_stoi_hidden_test\", \"SS_sisdri_hidden_test\",\n]\n\nexport {\n    reference_points,\n    subscribe_link,\n    domains,\n    tracks,\n    individual_submission_columnInfo,\n    individual_submission_hidden_columnInfo,\n    leaderboard_columnInfo,\n    leaderboard_hidden_columnInfo,\n    leaderboard_selections,\n    public_hidden_selections,\n    hidden_dev_set,\n    hidden_test_set,\n};\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { Box, Typography, Divider } from \"@material-ui/core\";\nimport update from \"immutability-helper\";\n\nfunction TitleTemplate(props) {\n  const theme = useTheme();\n  const {\n    title = \"Title\",\n    titleColor = \"textPrimary\",\n    titleVariant = \"h4\",\n    titleComponent = \"h4\",\n    description = null,\n    descriptionColor = \"textSecondary\",\n    descriptionVariant = \"body1\",\n    textMaxWidth = 750,\n    divider = true,\n    titleAlign = \"center\",\n    id = null\n  } = props;\n\n  return (\n    <div id={id}>\n      <Box margin={theme.spacing(3, \"auto\")}>\n        <Box margin={theme.spacing(2, titleAlign === \"center\"? \"auto\" : 0)} maxWidth={textMaxWidth} textAlign={titleAlign}>\n          <Typography component={titleComponent} color={titleColor} variant={titleVariant}>\n            {title}\n          </Typography>\n          {description && (\n            <Box margin={theme.spacing(1, \"auto\")}>\n              <Typography color={descriptionColor} variant={descriptionVariant}>\n                {description}\n              </Typography>\n            </Box>\n          )}\n        </Box>\n        {divider && <Divider />}\n      </Box>\n    </div>\n  );\n}\n\nfunction Title(props) {\n  return <TitleTemplate {...props} />;\n}\n\nfunction SubTitle(props) {\n  const newProps = update(props, {\n    titleVariant: { $set: \"h5\" },\n  });\n  return <TitleTemplate {...newProps} />;\n}\n\nexport { Title, SubTitle };\n","import { useState, useCallback, useEffect } from \"react\";\n\nexport const useMarkdown = (url) => {\n  const [markdownText, setMarkdownText] = useState(\"\");\n\n  useEffect(() => {\n    if (url) {\n      fetch(url)\n        .then((res) => res.text())\n        .then((text) => setMarkdownText(text));\n    }\n  }, []);\n\n  const fetchMarkdownText = (newUrl) => {\n    if (newUrl) {\n      fetch(newUrl)\n        .then((res) => res.text())\n        .then((text) => setMarkdownText(text));\n    }\n  };\n\n  return { markdownText, fetchMarkdownText };\n};\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { Section } from \"../components/Sections\";\nimport { HashLink } from \"react-router-hash-link\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport remarkGfm from \"remark-gfm\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atomOneLight as colorTheme } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { Title } from \"./Titles\";\nimport { Typography, Box } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nconst replacements = {\n  \"task_list.md\": \"/tasks#top\",\n  \"leaderboard.md\": \"leaderboard\"\n};\n\nexport default function MarkdownBlock(props) {\n  const theme = useTheme();\n  const mdFile = props.mdFile;\n  const landing = props.landing;\n\n  return (\n    <Section align=\"left\">\n      <ReactMarkdown\n        children={mdFile}\n        remarkPlugins={[remarkMath, remarkGfm]}\n        rehypePlugins={[rehypeKatex]}\n        components={{\n          code({ node, inline, className, children, ...props }) {\n            const match = /language-(\\w+)/.exec(className || \"\");\n            return !inline && match ? (\n              <SyntaxHighlighter\n                children={String(children).replace(/\\n$/, \"\")}\n                language={match[1]}\n                PreTag=\"div\"\n                style={colorTheme}\n                showLineNumbers={true}\n                {...props}\n              />\n            ) : !inline ? (\n              <SyntaxHighlighter\n                children={String(children).replace(/\\n$/, \"\")}\n                PreTag=\"div\"\n                style={colorTheme}\n                {...props}\n              />\n            ) : (\n              <code\n                style={{\n                  backgroundColor: \"#e0e0e0\",\n                  color: \"#000\",\n                  display: \"inline-block\",\n                  borderRadius: \"0.5em\",\n                  padding: \"0 0.25em\",\n                  fontSize: \"90%\",\n                }}\n              >\n                {children}\n              </code>\n            );\n          },\n          a({ href, children, ...props }) {\n            return replacements[href.replace(\"docs/\", \"\")] ? (\n              <HashLink to={replacements[href.replace(\"docs/\", \"\")]}>\n                {children}\n              </HashLink>\n            ) : /http/.exec(href || \"\") || /@/.exec(href || \"\") ? (\n              <a\n                href={href}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                {...props}\n              >\n                {children}\n              </a>\n            ) : /^#/.exec(href || \"\") ? (\n              <HashLink to={href}>{children}</HashLink>\n            ) : /\\.md/.exec(href || \"\") ? (\n              <HashLink to={href.replace(\".md\", \"\").replaceAll(\"_\", \"-\")}>\n                {children}\n              </HashLink>\n            ) : (\n              <a\n                href={\n                  \"https://github.com/dynamic-superb/dynamic-superb/blob/main/\" +\n                  href\n                }\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                {...props}\n              >\n                {children}\n              </a>\n            );\n          },\n          img({ src, ...props }) {\n            return (\n              <img\n                src={`https://raw.githubusercontent.com/dynamic-superb/dynamic-superb/main/${\n                  landing ? \"\" : \"docs/\"\n                }${src}`}\n                alt={src}\n                width=\"100%\"\n              />\n            );\n          },\n          p({ level, children, ...props }) {\n            const id = children.toString().replace(/ /g, \"-\");\n            return (\n              <Typography\n                component=\"span\"\n                variant=\"body1\"\n                color=\"textSecondary\"\n              >\n                {children}\n              </Typography>\n            );\n          },\n          h1({ level, children, ...props }) {\n            const id = children.toString().replace(/ /g, \"-\");\n            return landing ? (\n              <></>\n            ) : (\n              <Title\n                id={id}\n                titleComponent={\"h1\"}\n                titleVariant={\"h4\"}\n                titleAlign={\"center\"}\n                title={children}\n              />\n            );\n          },\n          h2({ level, children, ...props }) {\n            const id = children.toString().replace(/ /g, \"-\");\n            return landing ? (\n              <Title\n                id={id}\n                titleComponent={\"h2\"}\n                titleVariant={\"h5\"}\n                titleAlign={\"left\"}\n                title={children}\n              />\n            ) : (\n              <h2 id={id}>{children}</h2>\n            );\n          },\n          h3({ level, children, ...props }) {\n            const id = children.toString().replace(/ /g, \"-\");\n            return landing ? (\n              <Title\n                id={id}\n                titleComponent={\"h3\"}\n                titleVariant={\"h5\"}\n                titleAlign={\"left\"}\n                title={children}\n              />\n            ) : (\n              <h3 id={id}>{children}</h3>\n            );\n          },\n          h4({ level, children, ...props }) {\n            const id = children.toString().replace(/ /g, \"-\");\n            return landing ? (\n              <Title\n                id={id}\n                titleComponent={\"h4\"}\n                titleVariant={\"h5\"}\n                titleAlign={\"left\"}\n                title={children}\n              />\n            ) : (\n              <h4 id={id}>{children}</h4>\n            );\n          },\n          h5({ level, children, ...props }) {\n            const id = children.toString().replace(/ /g, \"-\");\n            return landing ? (\n              <Title\n                id={id}\n                titleComponent={\"h5\"}\n                titleVariant={\"h5\"}\n                titleAlign={\"left\"}\n                title={children}\n              />\n            ) : (\n              <h5 id={id}>{children}</h5>\n            );\n          },\n        }}\n      />\n    </Section>\n  );\n}\n","import React, { useRef, useEffect, useState } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport { Typography, Link, Grid } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport { Section, SubSection, SubSubSection } from \"./components/Sections\";\nimport { DescriptionButton } from \"./components/Buttons\";\nimport { Strong } from \"./components/Utilies\";\nimport { subscribe_link } from \"./Data\";\nimport YouTube from \"react-youtube\";\nimport { Title } from \"./components/Titles\";\nimport { HashLink } from \"react-router-hash-link\";\nimport { useMarkdown } from \"./hooks/markdown-file\";\nimport MarkdownBlock from \"./components/MarkdownBlock\";\n\nexport default function Landing(props) {\n  const theme = useTheme();\n  const ref = useRef(null);\n  //const [width, setWidth] = useState(0);\n\n  /*useEffect(() => {\n    setWidth(ref.current.offsetWidth);\n  }, []);\n\n  const videoWidth = Math.min(width, 700);\n  const opts = {\n    height: (videoWidth / 1920) * 1080,\n    width: videoWidth,\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0,\n    },\n  };*/\n\n  const { markdownText: landing, _ } = useMarkdown(\n    \"https://raw.githubusercontent.com/dynamic-superb/dynamic-superb/main/README.md\"\n  );\n\n  return (\n    <Box margin={theme.spacing(0, 0, 8)} textAlign=\"center\">\n      <Box margin={theme.spacing(8, \"auto\", 1)}>\n        <Typography\n          variant={useMediaQuery(theme.breakpoints.up(\"sm\")) ? \"h2\" : \"h4\"}\n          color=\"textPrimary\"\n        >\n          <strong>Dynamic-SUPERB</strong>\n        </Typography>\n      </Box>\n      <Box margin={theme.spacing(1, \"auto\", 6)}>\n        <Typography\n          variant={useMediaQuery(theme.breakpoints.up(\"sm\")) ? \"h4\" : \"h5\"}\n          color=\"textPrimary\"\n        >\n          Towards A Dynamic, Collaborative, and Comprehensive Instruction-Tuning\n          Benchmark for Speech\n        </Typography>\n      </Box>\n      <MarkdownBlock mdFile={landing} landing={true} />\n      <SubSection>\n        <Grid container justify=\"space-evenly\" spacing={0}>\n          {[\n            [\"ntu-1000.png\", \"https://www.ntu.edu.tw/english/\"],\n            [\"cmu-1000.png\", \"https://www.cmu.edu/\"],\n            [\"ut-austin-1000.png\", \"https://www.utexas.edu/\"],\n          ].map((filename) => {\n            return (\n              <Grid item xs={6} sm={4} md={4} key={filename[0]}>\n                <a target=\"_blank\" href={filename[1]}>\n                  <img src={filename[0]} width=\"100%\" />\n                </a>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </SubSection>\n      <Box margin={theme.spacing(8, 0)} textAlign=\"center\">\n        <Title title=\"\" />\n        <Typography variant=\"body1\" color=\"textSecondary\">\n          This website is modified from the source code of{\" \"}\n          <DescriptionButton\n            name={<a>the SUPERB official website</a>}\n            link=\"https://github.com/superbbenchmark/superbbenchmark.github.io\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          />\n          .\n        </Typography>\n      </Box>\n    </Box>\n  );\n  /*\n  return (\n    <Box ref={ref} margin={theme.spacing(0, 0, 8)}>\n      <Box margin={theme.spacing(8, \"auto\", 1)}>\n        <Typography\n          variant={useMediaQuery(theme.breakpoints.up(\"sm\")) ? \"h2\" : \"h4\"}\n          color=\"textPrimary\"\n        >\n          <strong>Dynamic-SUPERB</strong>\n        </Typography>\n      </Box>\n      <Box margin={theme.spacing(1, \"auto\", 6)}>\n        <Typography\n          variant={useMediaQuery(theme.breakpoints.up(\"sm\")) ? \"h4\" : \"h5\"}\n          color=\"textPrimary\"\n        >\n          Towards A Dynamic, Collaborative, and Comprehensive Instruction-Tuning\n          Benchmark for Speech\n        </Typography>\n      </Box>\n      <SubSection>\n        <Typography component={\"span\"} variant=\"body1\" color=\"textSecondary\">\n          <a\n            href=\"https://arxiv.org/abs/2309.09510\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Dynamic-SUPERB\n          </a>{\" \"}\n          is a dynamic and collaborative benchmark aimed at building universal\n          speech models capable of leveraging instruction tuning to perform\n          multiple tasks in a zero-shot fashion. It provides a platform for\n          researchers and developers to evaluate and compare different models in\n          various speech-processing tasks.\n        </Typography>\n        <img src={\"dynamic-superb.png\"} width=\"100%\" />\n      </SubSection>\n      <Box maxWidth={800} margin=\"auto\" textAlign=\"left\">\n        <SubSection>\n          <Title title=\"News\" titleVariant=\"h4\" />\n          <Typography component={\"span\"} variant=\"body1\" color=\"textSecondary\">\n            <ul>\n              <li>\n                <span>\n                  <Strong>Apr 11, 2024</Strong>: Apr 11, 2024: We have uploaded\n                  general guidelines for task proposals. 📄 Check them out{\" \"}\n                  <HashLink to=\"/task-proposal\">here</HashLink>! 🌟\n                </span>\n              </li>\n              <li>\n                <span>\n                  <Strong>Apr 11, 2024</Strong>: We have now included the\n                  evaluation results for LTU-AS, Qwen-Audio, and SALMONN. 📊 For\n                  more details, please see{\" \"}\n                  <a\n                    href=\"https://github.com/dynamic-superb/dynamic-superb/blob/main/docs/leaderboard_gpt_evaluation.md\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    here\n                  </a>\n                  . 🔍\n                </span>\n              </li>\n              <li>\n                <span>\n                  <Strong>Mar 14, 2024</Strong>: 📢 We have announced the call\n                  for tasks. 🚀 Please click{\" \"}\n                  <HashLink to=\"/call-for-task\">here</HashLink> for detailed\n                  information. 📄✨\n                </span>\n              </li>\n              <li>\n                <span>\n                  <Strong>Mar 13, 2024</Strong>: We have reduced the size of the\n                  data for all evaluation instances.\n                </span>\n              </li>\n            </ul>\n          </Typography>\n        </SubSection>\n        <SubSection>\n          <Title\n            title=\"About the Benchmark\"\n            titleVariant=\"h5\"\n            titleAlign=\"left\"\n          />\n          <Typography component={\"span\"} variant=\"body1\" color=\"textSecondary\">\n            <div>\n              To kickstart the benchmark, we have included 55 evaluation\n              instances by combining 33 tasks and 22 datasets. These cover a\n              range of dimensions, including content, speaker, semantics,\n              degradation, and paralinguistics. We also included\n              audio-processing tasks to evaluate the performance of speech\n              models beyond speech-processing. Each task consists of one or more\n              datasets (evaluation instances) with labeled examples and\n              corresponding instructions.\n            </div>\n            <br />\n            <div>\n              A comprehensive list of all tasks along with their detailed\n              descriptions can be found{\" \"}\n              <HashLink to=\"/tasks#top\">here</HashLink>. This list provides an\n              overview of the tasks currently included in the benchmark, but we\n              are actively seeking contributions from the community to expand\n              the range of tasks and make the benchmark more diverse and\n              comprehensive. You can view the performance of each model on the{\" \"}\n              <HashLink to=\"/leaderboard\">leaderboard</HashLink>.\n            </div>\n          </Typography>\n        </SubSection>\n        <SubSection>\n          <Title\n            title=\"Call for Contributions\"\n            titleVariant=\"h5\"\n            titleAlign=\"left\"\n          />\n          <Typography component={\"span\"} variant=\"body1\" color=\"textSecondary\">\n            <div>\n              We invite and encourage everyone to contribute to Dynamic-SUPERB\n              by submitting new tasks. This is an excellent opportunity to\n              showcase your creativity and explore the potential of large spoken\n              language models in solving various speech-related problems.\n            </div>\n            <br />\n            <div>\n              For contributing new tasks, please refer to the{\" \"}\n              <HashLink to=\"/task-submission\">\n                task submission tutorial\n              </HashLink>\n              . To submit scores for your model, please refer to the{\" \"}\n              <HashLink to=\"/score-submission\">\n                score submission tutorial\n              </HashLink>\n              . We welcome tasks from different domains and applications, as\n              long as they are relevant to speech processing.\n            </div>\n            <br />\n            <div>\n              All submitted tasks will undergo a{\" \"}\n              <HashLink to=\"/review-process\">review process</HashLink> conducted\n              by our team. We will evaluate the quality, feasibility, and\n              relevance of each task proposal. Upon approval, the tasks will be\n              merged into the Dynamic-SUPERB repository, making them available\n              for evaluation and comparison by the community.\n            </div>\n          </Typography>\n        </SubSection>\n        <SubSection>\n          <Title\n            title=\"Paper and Documentation\"\n            titleVariant=\"h5\"\n            titleAlign=\"left\"\n          />\n          <Typography component={\"span\"} variant=\"body1\" color=\"textSecondary\">\n            <div>\n              A paper introducing Dynamic-SUPERB is now available on{\" \"}\n              <a\n                href=\"https://arxiv.org/abs/2309.09510\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                arXiv\n              </a>\n              .This paper presents an overview of the benchmark, detailing its\n              motivation, tasks, and evaluation framework. It also showcases\n              experimental results and insights gained from evaluating various\n              models on the benchmark tasks. Due to space constraints, ablation\n              studies are not included in the paper; however, we present them{\" \"}\n              <a\n                href=\"https://github.com/dynamic-superb/dynamic-superb/blob/main/docs/ablation_studies.md\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                here\n              </a>\n              .\n            </div>\n            <br />\n            <div>\n              We also provide two introductory documents here:{\" \"}\n              <a\n                href=\"https://github.com/dynamic-superb/dynamic-superb/blob/main/docs/Dynamic-SUPERB-Introduction.pdf\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Dynamic-SUPERB Introduction\n              </a>{\" \"}\n              and{\" \"}\n              <a\n                href=\"https://github.com/dynamic-superb/dynamic-superb/blob/main/docs/Dynamic-SUPERB-Tutorial.pdf\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Dynamic-SUPERB Tutorial\n              </a>\n              . These documents offer a high-level introduction to the benchmark\n              and include information on dataset formats, evaluation protocols,\n              and implementation details.\n            </div>\n          </Typography>\n        </SubSection>\n        <SubSection>\n          <Title title=\"Contact Us\" titleVariant=\"h5\" titleAlign=\"left\" />\n          <Typography component={\"span\"} variant=\"body1\" color=\"textSecondary\">\n            <div>\n              If you have any questions or need further assistance, please don't\n              hesitate to contact us at{\" \"}\n              <a href=\"mailto:dynamic.superb.official@gmail.com\">\n                dynamic.superb.official@gmail.com\n              </a>\n              . We are here to support and guide you through the process of task\n              submission, review, and evaluation. Your feedback and suggestions\n              are valuable to us as we strive to make Dynamic-SUPERB a\n              comprehensive and useful benchmark for the community.\n            </div>\n            <br />\n            <div>\n              Join us in exploring the capabilities of large spoken language\n              models and shaping the future of speech-related research and\n              applications!\n            </div>\n          </Typography>\n        </SubSection>\n        <SubSection>\n          <Grid container justify=\"space-evenly\" spacing={0}>\n            {[\n              [\"ntu-1000.png\", \"https://www.ntu.edu.tw/english/\"],\n              [\"cmu-1000.png\", \"https://www.cmu.edu/\"],\n              [\"huggingface-1000.png\", \"https://huggingface.co/\"],\n            ].map((filename) => {\n              return (\n                <Grid item xs={6} sm={4} md={4} key={filename[0]}>\n                  <a target=\"_blank\" href={filename[1]}>\n                    <img src={filename[0]} width=\"100%\" />\n                  </a>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </SubSection>\n        <Box margin={theme.spacing(8, 0)} textAlign=\"center\">\n          <Title title=\"\" />\n          <Typography variant=\"body1\" color=\"textSecondary\">\n            This website is modified from the source code of{\" \"}\n            <DescriptionButton\n              name={<a>the SUPERB official website</a>}\n              link=\"https://github.com/superbbenchmark/superbbenchmark.github.io\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            />\n            .\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n  */\n}\n","import React from \"react\";\nimport { Paper } from \"@material-ui/core\";\n\nfunction LiftedPaper(props) {\n  const { elevation = 3, liftDegree = 6, ...remainedProps } = props;\n  const [hover, setHover] = React.useState(false);\n\n  return (\n    <Paper\n      {...remainedProps}\n      elevation={hover ? elevation + liftDegree : elevation}\n      onMouseOver={() => {\n        setHover((prev) => !prev);\n      }}\n      onMouseOut={() => {\n        setHover((prev) => !prev);\n      }}\n    />\n  );\n}\n\nexport { LiftedPaper };\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { Box, Typography, Grid, Button } from \"@material-ui/core\";\n\nimport { Section } from \"./components/Sections\";\nimport { Title } from \"./components/Titles\";\nimport AdaptiveLink from \"./components/AdaptiveLink\";\nimport { LiftedPaper } from \"./components/LiftedOnHover\";\nimport { capitalizeFirstLetter, Strong } from \"./components/Utilies\";\nimport { domains } from \"./Data\";\nimport { HashLink } from \"react-router-hash-link\";\n\nconst useStyles = makeStyles((theme) => ({\n  taskName: {\n    fontWeight: \"bold\",\n    marginBottom: theme.spacing(2),\n  },\n\n  // taskCard: {\n  //   '&:hover': {\n  //     background: 'green',\n  //     md: \"8\"\n  //   }\n  // },\n\n}));\n\n// function Task(props) {\n//   return (\n\n//   )\n// }\n\nfunction Tasks(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  return (\n    <React.Fragment>\n      <Section margin={theme.spacing(8, \"auto\", 1)}>\n        <Title\n          title=\"Tasks\"\n          description={<span>This list provides an overview of the tasks currently included in the benchmark,\n          but we are actively seeking contributions from the community to expand the range of tasks and\n          make the benchmark more diverse and comprehensive. You can view the performance of each model\n          on the <HashLink to=\"/leaderboard\">leaderboard</HashLink></span>}\n        />\n        <Grid container direction=\"row\" spacing={2} justify=\"center\">\n          {domains.map(({ name }) => (\n            <Grid item>\n              <AdaptiveLink link={`/tasks#${name}`}>\n                <Button variant=\"outlined\">\n                  {capitalizeFirstLetter(name.toLowerCase())}\n                </Button>\n              </AdaptiveLink>\n            </Grid>\n          ))}\n        </Grid>\n      </Section>\n      {domains.map(({ name, description, tasks }) => {\n        return (\n          <Section anchorKey={name} margin={theme.spacing(8, \"auto\", 1)}>\n            <Title\n              title={name}\n              //description={description}\n            />\n            <Grid container spacing={5} justify=\"center\">\n              {tasks.map(({ name, description }) => {\n                return (\n                  <Grid item xs={12} sm={6} md={4} className={classes.taskCard} >\n                    <LiftedPaper elevation={3}>\n                      <Box padding={theme.spacing(3, 2, 0)}>\n                        <Typography\n                          color=\"textPrimary\"\n                          variant=\"h6\"\n                          className={classes.taskName}\n                        >\n                          {`${name}`}\n                        </Typography>\n                        <Typography color=\"textSecondary\" variant=\"body2\">\n                          {description}\n                        </Typography>\n                        <Box padding={theme.spacing(2, 0)}>\n                        <Typography color=\"textSecondary\" variant=\"body1\" align=\"right\">\n                          <HashLink to={`/task/${name.replaceAll(\" \",\"\")}`}>details</HashLink>\n                        </Typography>\n                        </Box>\n                      </Box>\n                    </LiftedPaper>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </Section>\n        );\n      })}\n    </React.Fragment>\n  );\n}\n\nexport default Tasks;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { List } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\n\nimport AdaptiveLink from './AdaptiveLink';\n\n\nconst useStyles = makeStyles({\n  list: {\n    width: 200,\n    paddingLeft: 20,\n    paddingRight: 20,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function SwipeableTemporaryDrawer(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      // onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {props.items(toggleDrawer(anchor, false))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      {['right'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <div onClick={toggleDrawer(anchor, true)}>{props.children}</div>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n    isLoggedIn: false,\n    userId: null,\n    token: null,\n    isAdmin: false,\n    email: null,\n    login: () => {},\n    logout: () => {},\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  CssBaseline,\n  useScrollTrigger,\n  Slide,\n  Zoom,\n  Fab,\n  Button,\n  Box,\n  Menu,\n  MenuItem,\n  ListItem,\n  ListItemText,\n  Divider,\n} from \"@material-ui/core\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport Drawer from \"./Drawer\";\nimport AdaptiveLink from \"./AdaptiveLink\";\n\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/auth-context\";\n\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n  let history = useHistory();\n  let location = useLocation();\n\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      \"#back-to-top-anchor\"\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ block: \"center\" });\n      history.push(location.pathname);\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div\n        onClick={handleClick}\n        role=\"presentation\"\n        className={classes.root}\n      >\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  toolbar: {\n    width: \"100%\",\n    maxWidth: 1600,\n    margin: \"auto\",\n    paddingLeft: 20,\n    paddingRight: 20,\n  },\n  tool: {\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  button: {\n    paddingLeft: 12,\n    paddingRight: 12,\n    marginLeft: 2,\n    marginRight: 2,\n    borderRadius: 10,\n    border: \"solid 1px transparent\",\n    \"&:hover\": {\n      background: \"rgba(255, 255, 255, 1)\",\n      boxShadow: \"0px 3px 10px rgba(0, 0, 0, 0.1)\",\n    },\n    cursor: \"pointer\",\n  },\n  navlink: {\n    fontWeight: \"inherit\",\n  },\n}));\n\nfunction LiftingBarButton(props) {\n  const classes = useStyles();\n  return (\n    <div className={`${classes.tool} ${classes.button}`}>\n      {props.children}\n    </div>\n  );\n}\n\nfunction NavigationBar({ width, tableControlRef, ...props }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const location = useLocation();\n  const auth = useContext(AuthContext);\n\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  let items = [\n    //[\"Challenge\", [[\"SLT2023\", \"/challenge-slt2023\"], [\"AAAI2022\", \"/challenge-aaai2022\"]]],\n    [\"Call for Task\", \"/docs/call-for-tasks\"],\n    [\"Submission\", [[\"Task Submission\", \"/docs/task-submission\"], [\"Task Proposal\", \"/docs/task-proposal\"], [\"Review Process\", \"/docs/review-process\"], [\"Score Submission\", \"/docs/score-submission\"],]],\n    [\"Tasks\", \"/tasks\"],\n    [\"Leaderboard\", \"/leaderboard\"],\n    [\"Github\", \"https://github.com/dynamic-superb/dynamic-superb\"],\n    [\"Paper\", \"https://arxiv.org/abs/2309.09510\"],\n    //[\"Tasks\", \"https://github.com/dynamic-superb/dynamic-superb/blob/main/docs/task_list.md\"],\n    //[\"Leaderboard\", \"https://github.com/dynamic-superb/dynamic-superb/blob/main/docs/leaderboard.md\"],\n  ];\n  /* if (auth.isLoggedIn) {\n    // items.push([\"Submit\", \"/submit\"]);\n    items.push([\"Profile\", \"/profile\"]);\n    items.push([\"Logout\", \"/logout\"]);\n  } else {\n    items.push([\"Login\", \"/login\"]);\n  } */\n\n  const items1 = items.map(([text, link]) =>\n    Array.isArray(link) ?\n      <Box sx={{ flexGrow: 0 }}>\n        <Grid item onClick={handleOpenUserMenu}>\n          <LiftingBarButton >\n            <Typography\n              color=\"textSecondary\"\n              variant=\"overline\"\n              className={classes.navlink}\n              key={text}\n            >\n              {text}\n            </Typography>\n          </LiftingBarButton>\n        </Grid>\n        <Menu\n          sx={{ mt: '45px' }}\n          id=\"menu-appbar\"\n          anchorEl={anchorElUser}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          keepMounted\n          transformOrigin={{\n            vertical: -50,\n            horizontal: 'right',\n          }}\n          open={Boolean(anchorElUser)}\n          onClose={handleCloseUserMenu}\n          onMouseLeave={handleCloseUserMenu}\n        >\n          {link.map(([text, link]) =>\n            <MenuItem key={text} onClick={handleCloseUserMenu}>\n              <AdaptiveLink link={link}>\n                <Typography textAlign=\"center\">{text}</Typography>\n              </AdaptiveLink>\n            </MenuItem>\n          )}\n        </Menu>\n      </Box> :\n      <Grid item key={link}>\n        <AdaptiveLink link={link}>\n          <LiftingBarButton>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"overline\"\n              className={classes.navlink}\n              key={text}\n            >\n              {text}\n            </Typography>\n          </LiftingBarButton>\n        </AdaptiveLink>\n      </Grid>\n  );\n\n  const items2 = (onclick) => items.map(([text, link]) =>\n    Array.isArray(link) ?\n      <Box sx={{ flexGrow: 0 }}>\n        <Grid item onClick={handleOpenUserMenu}>\n          <ListItem button>\n            <ListItemText>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"overline\"\n                className={classes.navlink}\n                key={text}\n              >\n                {text}\n              </Typography>\n            </ListItemText>\n          </ListItem>\n        </Grid>\n        <Menu\n          sx={{ mt: '45px', flexGrow: 1 }}\n          id=\"menu-appbar\"\n          anchorEl={anchorElUser}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'left',\n          }}\n          keepMounted\n          transformOrigin={{\n            vertical: -50,\n            horizontal: 'left',\n          }}\n          open={Boolean(anchorElUser)}\n          onClose={handleCloseUserMenu}\n          onMouseLeave={handleCloseUserMenu}\n        >\n          {link.map(([text, link]) =>\n            <div onClick={onclick}>\n              <MenuItem key={text} onClick={handleCloseUserMenu}>\n                <AdaptiveLink link={link}>\n                  <Typography textAlign=\"center\">{text}</Typography>\n                </AdaptiveLink>\n              </MenuItem>\n            </div>\n          )}\n        </Menu>\n        <Divider />\n      </Box> :\n      <div>\n        <AdaptiveLink link={link}>\n          <ListItem button onClick={onclick}>\n            {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\n            <ListItemText>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"overline\"\n                className={classes.navlink}\n                key={text}\n              >\n                {text}\n              </Typography>\n            </ListItemText>\n          </ListItem>\n        </AdaptiveLink>\n        <Divider />\n      </div>\n  );\n\n\n  const largeScreen = useMediaQuery(theme.breakpoints.up(\"lg\"));\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <HideOnScroll {...props}>\n        <AppBar color=\"primary\">\n          <Toolbar className={classes.toolbar}>\n            <Grid container alignItems=\"center\">\n              <Grid item xs={9} lg={2}>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-start\"\n                  alignItems=\"center\"\n                  spacing={1}\n                >\n                  <Grid item>\n                    <AdaptiveLink link=\"/\">\n                      <LiftingBarButton>\n                        <Typography\n                          color=\"textPrimary\"\n                          variant=\"h6\"\n                          className={`${classes.navlink}`}\n                        >\n                          {largeScreen\n                            ? \"Dynamic-SUPERB\"\n                            : \"Dynamic-SUPERB\"}\n                        </Typography>\n                      </LiftingBarButton>\n                    </AdaptiveLink>\n                  </Grid>\n                  {(location.pathname.includes(\n                    \"leaderboard-tmp\"\n                  ) ||\n                    location.pathname.includes(\n                      \"profile\"\n                    )) && (\n                      <Grid item>\n                        <AdaptiveLink link={null}>\n                          <Button\n                            size=\"small\"\n                            variant=\"outlined\"\n                            onClick={() => {\n                              tableControlRef.current.click();\n                            }}\n                          >\n                            {largeScreen\n                              ? \"Help\"\n                              : \"Help\"}\n                          </Button>\n                        </AdaptiveLink>\n                      </Grid>\n                    )}\n                </Grid>\n              </Grid>\n              <Grid item xs={3} lg={10}>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-end\"\n                  alignItems=\"center\"\n                >\n                  <Hidden mdDown>\n                    {items1}\n                  </Hidden>\n                  <Hidden lgUp>\n                    <Grid item>\n                      <Drawer items={items2}>\n                        <LiftingBarButton>\n                          <Typography\n                            color=\"textSecondary\"\n                            variant=\"overline\"\n                          >\n                            MENU\n                          </Typography>\n                        </LiftingBarButton>\n                      </Drawer>\n                    </Grid>\n                  </Hidden>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar id=\"back-to-top-anchor\" />\n      <ScrollTop {...props}>\n        <Fab\n          color=\"secondary\"\n          size=\"small\"\n          aria-label=\"scroll back to top\"\n        >\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </React.Fragment>\n  );\n}\n\nexport default withWidth()(NavigationBar);\n","// model_name:{task1:{instance1:Score, instance2:score},\n//            task2:{instance1:score, instance2:score}...}\n\nconst raw_data = {\n  \"BERT-GSLM\": {\n    SpeechDetection: {\n      LJSpeech: 99.66,\n      \"LibriSpeech-TestClean\": 97.48,\n      \"LibriSpeech-TestOther\": 77.57,\n    },\n    SpeechTextMatching: {\n      LJSpeech: 54.11,\n      \"LibriSpeech-TestClean\": 57.82,\n      \"LibriSpeech-TestOther\": 54.02,\n    },\n    SpokenTermDetection: {\n      LJSpeech: 52.6,\n      \"LibriSpeech-TestClean\": 51.45,\n      \"LibriSpeech-TestOther\": 52.36,\n    },\n    EnhancementDetection: {\n      \"LibriTTS-TestClean_WHAM\": 74.26,\n    },\n    NoiseDetection: {\n      \"LJSpeech_MUSAN-Gaussain\": 83.17,\n      \"VCTK-MUSAN-Gaussain\": 90.98,\n    },\n    NoiseSNRLevelPrediction: {\n      \"VCTK_MUSAN-Gaussian\": 46.41,\n    },\n    ReverberationDetection: {\n      \"LJSpeech_RirsNoises-SmallRoom\": 58.61,\n      \"VCTK_RirsNoises-SmallRoom\": 55.92,\n    },\n    DialogueEmotionClassification: {\n      DailyTalk: 79.7,\n    },\n    EmotionRecognition: {\n      MultimodalEmotionlinesDataset: 0.0,\n    },\n    SpoofDetection: {\n      ASVspoof2015: 88.65,\n      ASVspoof2017: 42.57,\n    },\n    DialogueActClassification: {\n      DailyTalk: 45.65,\n    },\n    DialogueActPairing: {\n      DailyTalk: 48.6,\n    },\n    SpeakerCounting: {\n      \"LibriTTS-TestClean\": 55.45,\n    },\n    SpeakerVerification: {\n      \"LibriSpeech-TestClean\": 37.25,\n      VCTK: 42.36,\n    },\n  },\n  Whisper: {},\n  \"ImageBind-LLM\": {},\n  \"Whisper-LLM\": {},\n  \"ASR-ChatGPT\": {},\n};\n\nconst raw_data_seen = {\n  instances: [\n    {\n      Instance: \"BirdSoundDetection_Warblrb10k\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"ChordClassification_AcousticGuitarAndPiano\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"EnvironmentalSoundClassification_ESC50-Animals\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"EnvironmentalSoundClassification_ESC50-ExteriorAndUrbanNoises\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance:\n        \"EnvironmentalSoundClassification_ESC50-HumanAndNonSpeechSounds\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance:\n        \"EnvironmentalSoundClassification_ESC50-InteriorAndDomesticSounds\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance:\n        \"EnvironmentalSoundClassification_ESC50-NaturalSoundscapesAndWaterSounds\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"SpeechDetection_LJSpeech\",\n      \"BERT-GSLM\": \"99.66%\",\n      Whisper: \"99.99%\",\n      \"ImageBind-LLM\": \"99.75%\",\n      \"Whisper-LLM\": \"99.99%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"SpeechDetection_LibriSpeech-TestClean\",\n      \"BERT-GSLM\": \"97.48%\",\n      Whisper: \"99.92%\",\n      \"ImageBind-LLM\": \"89.73%\",\n      \"Whisper-LLM\": \"99.89%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"SpeechDetection_LibriSpeech-TestOther\",\n      \"BERT-GSLM\": \"77.57%\",\n      Whisper: \"99.73%\",\n      \"ImageBind-LLM\": \"82.85%\",\n      \"Whisper-LLM\": \"99.66%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"SpeechTextMatching_LJSpeech\",\n      \"BERT-GSLM\": \"54.11%\",\n      Whisper: \"96.56%\",\n      \"ImageBind-LLM\": \"51.40%\",\n      \"Whisper-LLM\": \"80.68%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"SpeechTextMatching_LibriSpeech-TestClean\",\n      \"BERT-GSLM\": \"57.82%\",\n      Whisper: \"91.56%\",\n      \"ImageBind-LLM\": \"51.53%\",\n      \"Whisper-LLM\": \"84.77%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"SpeechTextMatching_LibriSpeech-TestOther\",\n      \"BERT-GSLM\": \"54.02%\",\n      Whisper: \"91.19%\",\n      \"ImageBind-LLM\": \"49.74%\",\n      \"Whisper-LLM\": \"83.67%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"SpokenTermDetection_LJSpeech\",\n      \"BERT-GSLM\": \"52.60%\",\n      Whisper: \"96.32%\",\n      \"ImageBind-LLM\": \"59.77%\",\n      \"Whisper-LLM\": \"58.97%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"SpokenTermDetection_LibriSpeech-TestClean\",\n      \"BERT-GSLM\": \"51.45%\",\n      Whisper: \"92.44%\",\n      \"ImageBind-LLM\": \"46.07%\",\n      \"Whisper-LLM\": \"45.34%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"SpokenTermDetection_LibriSpeech-TestOther\",\n      \"BERT-GSLM\": \"52.36%\",\n      Whisper: \"90.03%\",\n      \"ImageBind-LLM\": \"47.53%\",\n      \"Whisper-LLM\": \"45.02%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"SpeechCommandRecognition_GoogleSpeechCommandsV1\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"LanguageIdentification_VoxForge\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"EnhancementDetection_LibriTTS-TestClean_WHAM\",\n      \"BERT-GSLM\": \"74.26%\",\n      Whisper: \"63.30%\",\n      \"ImageBind-LLM\": \"77.07%\",\n      \"Whisper-LLM\": \"91.52%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"NoiseDetection_LJSpeech_MUSAN-Gaussian\",\n      \"BERT-GSLM\": \"83.17%\",\n      Whisper: \"84.79%\",\n      \"ImageBind-LLM\": \"94.03%\",\n      \"Whisper-LLM\": \"99.66%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"NoiseDetection_VCTK-MUSAN-Gaussian\",\n      \"BERT-GSLM\": \"90.98%\",\n      Whisper: \"78.12%\",\n      \"ImageBind-LLM\": \"95.85%\",\n      \"Whisper-LLM\": \"98.11%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"NoiseDetection_LJSpeech_MUSAN-Music\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"NoiseDetection_VCTK_MUSAN-Music\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"NoiseDetection_LJSpeech_MUSAN-Noise\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"NoiseDetection_VCTK_MUSAN-Noise\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"NoiseDetection_LJSpeech_MUSAN-Speech\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"NoiseDetection_VCTK_MUSAN-Speech\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"NoiseSNRLevelPrediction_VCTK_MUSAN-Gaussian\",\n      \"BERT-GSLM\": \"46.41%\",\n      Whisper: \"35.21%\",\n      \"ImageBind-LLM\": \"47.66%\",\n      \"Whisper-LLM\": \"78.95%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"NoiseSNRLevelPrediction_VCTK_MUSAN-Music\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"NoiseSNRLevelPrediction_VCTK_MUSAN-Noise\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"NoiseSNRLevelPrediction_VCTK_MUSAN-Speech\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"ReverberationDetection_LJSpeech_RirsNoises-LargeRoom\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"ReverberationDetection_VCTK_RirsNoises-LargeRoom\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"ReverberationDetection_LJSpeech_RirsNoises-MediumRoom\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"ReverberationDetection_VCTK_RirsNoises-MediumRoom\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"ReverberationDetection_LJSpeech_RirsNoises-SmallRoom\",\n      \"BERT-GSLM\": \"58.61%\",\n      Whisper: \"86.91%\",\n      \"ImageBind-LLM\": \"71.79%\",\n      \"Whisper-LLM\": \"89.39%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"ReverberationDetection_VCTK_RirsNoises-SmallRoom\",\n      \"BERT-GSLM\": \"55.92%\",\n      Whisper: \"78.49%\",\n      \"ImageBind-LLM\": \"85.47%\",\n      \"Whisper-LLM\": \"88.44%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"AccentClassification_AccentdbExtended\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"DialogueEmotionClassification_DailyTalk\",\n      \"BERT-GSLM\": \"79.70%\",\n      Whisper: \"82.45%\",\n      \"ImageBind-LLM\": \"80.37%\",\n      \"Whisper-LLM\": \"82.68%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"EmotionRecognition_MultimodalEmotionlinesDataset\",\n      \"BERT-GSLM\": \"0.00%\",\n      Whisper: \"0.03%\",\n      \"ImageBind-LLM\": \"12.13%\",\n      \"Whisper-LLM\": \"11.21%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"HowFarAreYou_3DSpeaker\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"StressDetection_MIRSD\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"SpoofDetection_ASVspoof2015\",\n      \"BERT-GSLM\": \"88.65%\",\n      Whisper: \"94.07%\",\n      \"ImageBind-LLM\": \"94.19%\",\n      \"Whisper-LLM\": \"97.76%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"SpoofDetection_ASVspoof2017\",\n      \"BERT-GSLM\": \"42.57%\",\n      Whisper: \"21.16%\",\n      \"ImageBind-LLM\": \"52.53%\",\n      \"Whisper-LLM\": \"73.64%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"DialogueActClassification_DailyTalk\",\n      \"BERT-GSLM\": \"45.65%\",\n      Whisper: \"59.37%\",\n      \"ImageBind-LLM\": \"44.37%\",\n      \"Whisper-LLM\": \"61.06%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"IntentClassification_FluentSpeechCommands-Action\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"IntentClassification_FluentSpeechCommands-Location\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"IntentClassification_FluentSpeechCommands-Object\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"SarcasmDetection_Mustard\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"DialogueActPairing_DailyTalk\",\n      \"BERT-GSLM\": \"48.60%\",\n      Whisper: \"50.36%\",\n      \"ImageBind-LLM\": \"50.88%\",\n      \"Whisper-LLM\": \"49.84%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"SpeakerCounting_LibriTTS-TestClean\",\n      \"BERT-GSLM\": \"55.45%\",\n      Whisper: \"41.65%\",\n      \"ImageBind-LLM\": \"55.85%\",\n      \"Whisper-LLM\": \"87.00%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"SpeakerVerification_LibriSpeech-TestClean\",\n      \"BERT-GSLM\": \"37.25%\",\n      Whisper: \"74.80%\",\n      \"ImageBind-LLM\": \"17.80%\",\n      \"Whisper-LLM\": \"97.99%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"SpeakerVerification_VCTK\",\n      \"BERT-GSLM\": \"42.36%\",\n      Whisper: \"50.20%\",\n      \"ImageBind-LLM\": \"52.68%\",\n      \"Whisper-LLM\": \"92.00%\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"MultiSpeakerDetection_LibriSpeech-TestClean\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n    {\n      Instance: \"MultiSpeakerDetection_VCTK\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"\",\n    },\n  ],\n};\n\nconst raw_data_unseen = {\n  instances: [\n    {\n      Instance: \"BirdSoundDetection_Warblrb10k\",\n      \"BERT-GSLM\": \"0.00%\",\n      Whisper: \"0.00%\",\n      \"ImageBind-LLM\": \"28.29%\",\n      \"Whisper-LLM\": \"14.67%\",\n      \"ASR-ChatGPT\": \"14.71%\",\n    },\n    {\n      Instance: \"ChordClassification_AcousticGuitarAndPiano\",\n      \"BERT-GSLM\": \"0.00%\",\n      Whisper: \"0.00%\",\n      \"ImageBind-LLM\": \"44.35%\",\n      \"Whisper-LLM\": \"58.44%\",\n      \"ASR-ChatGPT\": \"2.79%\",\n    },\n    {\n      Instance: \"EnvironmentalSoundClassification_ESC50-Animals\",\n      \"BERT-GSLM\": \"0.00%\",\n      Whisper: \"4.00%\",\n      \"ImageBind-LLM\": \"73.75%\",\n      \"Whisper-LLM\": \"11.75%\",\n      \"ASR-ChatGPT\": \"15.50%\",\n    },\n    {\n      Instance: \"EnvironmentalSoundClassification_ESC50-ExteriorAndUrbanNoises\",\n      \"BERT-GSLM\": \"0.00%\",\n      Whisper: \"0.00%\",\n      \"ImageBind-LLM\": \"48.75%\",\n      \"Whisper-LLM\": \"3.50%\",\n      \"ASR-ChatGPT\": \"7.00%\",\n    },\n    {\n      Instance:\n        \"EnvironmentalSoundClassification_ESC50-HumanAndNonSpeechSounds\",\n      \"BERT-GSLM\": \"0.00%\",\n      Whisper: \"1.75%\",\n      \"ImageBind-LLM\": \"12.00%\",\n      \"Whisper-LLM\": \"6.00%\",\n      \"ASR-ChatGPT\": \"19.50%\",\n    },\n    {\n      Instance:\n        \"EnvironmentalSoundClassification_ESC50-InteriorAndDomesticSounds\",\n      \"BERT-GSLM\": \"0.00%\",\n      Whisper: \"0.00%\",\n      \"ImageBind-LLM\": \"20.25%\",\n      \"Whisper-LLM\": \"7.75%\",\n      \"ASR-ChatGPT\": \"4.00%\",\n    },\n    {\n      Instance:\n        \"EnvironmentalSoundClassification_ESC50-NaturalSoundscapesAndWaterSounds\",\n      \"BERT-GSLM\": \"0.00%\",\n      Whisper: \"0.00%\",\n      \"ImageBind-LLM\": \"22.75%\",\n      \"Whisper-LLM\": \"9.25%\",\n      \"ASR-ChatGPT\": \"4.75%\",\n    },\n    {\n      Instance: \"SpeechDetection_LJSpeech\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"54.26%\",\n    },\n    {\n      Instance: \"SpeechDetection_LibriSpeech-TestClean\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"55.69%\",\n    },\n    {\n      Instance: \"SpeechDetection_LibriSpeech-TestOther\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"52.26%\",\n    },\n    {\n      Instance: \"SpeechTextMatching_LJSpeech\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"80.99%\",\n    },\n    {\n      Instance: \"SpeechTextMatching_LibriSpeech-TestClean\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"52.18%\",\n    },\n    {\n      Instance: \"SpeechTextMatching_LibriSpeech-TestOther\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"75.40%\",\n    },\n    {\n      Instance: \"SpokenTermDetection_LJSpeech\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"48.04%\",\n    },\n    {\n      Instance: \"SpokenTermDetection_LibriSpeech-TestClean\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"79.58%\",\n    },\n    {\n      Instance: \"SpokenTermDetection_LibriSpeech-TestOther\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"78.73%\",\n    },\n    {\n      Instance: \"SpeechCommandRecognition_GoogleSpeechCommandsV1\",\n      \"BERT-GSLM\": \"0.08%\",\n      Whisper: \"8.46%\",\n      \"ImageBind-LLM\": \"4.31%\",\n      \"Whisper-LLM\": \"3.90%\",\n      \"ASR-ChatGPT\": \"41.61%\",\n    },\n    {\n      Instance: \"LanguageIdentification_VoxForge\",\n      \"BERT-GSLM\": \"0.00%\",\n      Whisper: \"20.28%\",\n      \"ImageBind-LLM\": \"26.99%\",\n      \"Whisper-LLM\": \"13.54%\",\n      \"ASR-ChatGPT\": \"96.53%\",\n    },\n    {\n      Instance: \"EnhancementDetection_LibriTTS-TestClean_WHAM\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"63.32%\",\n    },\n    {\n      Instance: \"NoiseDetection_LJSpeech_MUSAN-Gaussian\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"49.02%\",\n    },\n    {\n      Instance: \"NoiseDetection_VCTK-MUSAN-Gaussian\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"50.28%\",\n    },\n    {\n      Instance: \"NoiseDetection_LJSpeech_MUSAN-Music\",\n      \"BERT-GSLM\": \"60.53%\",\n      Whisper: \"49.46%\",\n      \"ImageBind-LLM\": \"51.92%\",\n      \"Whisper-LLM\": \"60.49%\",\n      \"ASR-ChatGPT\": \"49.62%\",\n    },\n    {\n      Instance: \"NoiseDetection_VCTK_MUSAN-Music\",\n      \"BERT-GSLM\": \"25.78%\",\n      Whisper: \"49.80%\",\n      \"ImageBind-LLM\": \"53.34%\",\n      \"Whisper-LLM\": \"57.99%\",\n      \"ASR-ChatGPT\": \"49.30%\",\n    },\n    {\n      Instance: \"NoiseDetection_LJSpeech_MUSAN-Noise\",\n      \"BERT-GSLM\": \"48.84%\",\n      Whisper: \"50.58%\",\n      \"ImageBind-LLM\": \"55.29%\",\n      \"Whisper-LLM\": \"59.01%\",\n      \"ASR-ChatGPT\": \"49.52%\",\n    },\n    {\n      Instance: \"NoiseDetection_VCTK_MUSAN-Noise\",\n      \"BERT-GSLM\": \"9.23%\",\n      Whisper: \"51.18%\",\n      \"ImageBind-LLM\": \"57.08%\",\n      \"Whisper-LLM\": \"58.26%\",\n      \"ASR-ChatGPT\": \"49.61%\",\n    },\n    {\n      Instance: \"NoiseDetection_LJSpeech_MUSAN-Speech\",\n      \"BERT-GSLM\": \"53.20%\",\n      Whisper: \"49.76%\",\n      \"ImageBind-LLM\": \"50.21%\",\n      \"Whisper-LLM\": \"66.68%\",\n      \"ASR-ChatGPT\": \"49.63%\",\n    },\n    {\n      Instance: \"NoiseDetection_VCTK_MUSAN-Speech\",\n      \"BERT-GSLM\": \"19.00%\",\n      Whisper: \"51.45%\",\n      \"ImageBind-LLM\": \"48.32%\",\n      \"Whisper-LLM\": \"61.91%\",\n      \"ASR-ChatGPT\": \"49.96%\",\n    },\n    {\n      Instance: \"NoiseSNRLevelPrediction_VCTK_MUSAN-Gaussian\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"19.82%\",\n    },\n    {\n      Instance: \"NoiseSNRLevelPrediction_VCTK_MUSAN-Music\",\n      \"BERT-GSLM\": \"28.99%\",\n      Whisper: \"20.73%\",\n      \"ImageBind-LLM\": \"17.79%\",\n      \"Whisper-LLM\": \"20.47%\",\n      \"ASR-ChatGPT\": \"19.41%\",\n    },\n    {\n      Instance: \"NoiseSNRLevelPrediction_VCTK_MUSAN-Noise\",\n      \"BERT-GSLM\": \"26.83%\",\n      Whisper: \"22.06%\",\n      \"ImageBind-LLM\": \"21.98%\",\n      \"Whisper-LLM\": \"22.70%\",\n      \"ASR-ChatGPT\": \"19.30%\",\n    },\n    {\n      Instance: \"NoiseSNRLevelPrediction_VCTK_MUSAN-Speech\",\n      \"BERT-GSLM\": \"19.63%\",\n      Whisper: \"26.39%\",\n      \"ImageBind-LLM\": \"18.25%\",\n      \"Whisper-LLM\": \"20.17%\",\n      \"ASR-ChatGPT\": \"19.18%\",\n    },\n    {\n      Instance: \"ReverberationDetection_LJSpeech_RirsNoises-LargeRoom\",\n      \"BERT-GSLM\": \"62.56%\",\n      Whisper: \"89.39%\",\n      \"ImageBind-LLM\": \"43.14%\",\n      \"Whisper-LLM\": \"89.75%\",\n      \"ASR-ChatGPT\": \"48.16%\",\n    },\n    {\n      Instance: \"ReverberationDetection_VCTK_RirsNoises-LargeRoom\",\n      \"BERT-GSLM\": \"60.88%\",\n      Whisper: \"85.93%\",\n      \"ImageBind-LLM\": \"73.14%\",\n      \"Whisper-LLM\": \"78.80%\",\n      \"ASR-ChatGPT\": \"47.47%\",\n    },\n    {\n      Instance: \"ReverberationDetection_LJSpeech_RirsNoises-MediumRoom\",\n      \"BERT-GSLM\": \"67.12%\",\n      Whisper: \"89.12%\",\n      \"ImageBind-LLM\": \"51.75%\",\n      \"Whisper-LLM\": \"90.06%\",\n      \"ASR-ChatGPT\": \"47.87%\",\n    },\n    {\n      Instance: \"ReverberationDetection_VCTK_RirsNoises-MediumRoom\",\n      \"BERT-GSLM\": \"57.74%\",\n      Whisper: \"84.00%\",\n      \"ImageBind-LLM\": \"77.17%\",\n      \"Whisper-LLM\": \"80.04%\",\n      \"ASR-ChatGPT\": \"47.76%\",\n    },\n    {\n      Instance: \"ReverberationDetection_LJSpeech_RirsNoises-SmallRoom\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"48.26%\",\n    },\n    {\n      Instance: \"ReverberationDetection_VCTK_RirsNoises-SmallRoom\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"48.00%\",\n    },\n    {\n      Instance: \"AccentClassification_AccentdbExtended\",\n      \"BERT-GSLM\": \"0.00%\",\n      Whisper: \"0.00%\",\n      \"ImageBind-LLM\": \"19.08%\",\n      \"Whisper-LLM\": \"4.33%\",\n      \"ASR-ChatGPT\": \"6.63%\",\n    },\n    {\n      Instance: \"DialogueEmotionClassification_DailyTalk\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"57.76%\",\n    },\n    {\n      Instance: \"EmotionRecognition_MultimodalEmotionlinesDataset\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"50.03%\",\n    },\n    {\n      Instance: \"HowFarAreYou_3DSpeaker\",\n      \"BERT-GSLM\": \"0.00%\",\n      Whisper: \"0.00%\",\n      \"ImageBind-LLM\": \"7.42%\",\n      \"Whisper-LLM\": \"0.05%\",\n      \"ASR-ChatGPT\": \"0.50%\",\n    },\n    {\n      Instance: \"StressDetection_MIRSD\",\n      \"BERT-GSLM\": \"37.89%\",\n      Whisper: \"25.47%\",\n      \"ImageBind-LLM\": \"35.20%\",\n      \"Whisper-LLM\": \"15.52%\",\n      \"ASR-ChatGPT\": \"15.32%\",\n    },\n    {\n      Instance: \"SpoofDetection_ASVspoof2015\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"14.75%\",\n    },\n    {\n      Instance: \"SpoofDetection_ASVspoof2017\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"15.34%\",\n    },\n    {\n      Instance: \"DialogueActClassification_DailyTalk\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"62.88%\",\n    },\n    {\n      Instance: \"IntentClassification_FluentSpeechCommands-Action\",\n      \"BERT-GSLM\": \"0.00%\",\n      Whisper: \"1.28%\",\n      \"ImageBind-LLM\": \"20.53%\",\n      \"Whisper-LLM\": \"17.29%\",\n      \"ASR-ChatGPT\": \"85.67%\",\n    },\n    {\n      Instance: \"IntentClassification_FluentSpeechCommands-Location\",\n      \"BERT-GSLM\": \"0.00%\",\n      Whisper: \"1.82%\",\n      \"ImageBind-LLM\": \"14.30%\",\n      \"Whisper-LLM\": \"14.94%\",\n      \"ASR-ChatGPT\": \"83.85%\",\n    },\n    {\n      Instance: \"IntentClassification_FluentSpeechCommands-Object\",\n      \"BERT-GSLM\": \"0.00%\",\n      Whisper: \"0.22%\",\n      \"ImageBind-LLM\": \"13.31%\",\n      \"Whisper-LLM\": \"4.83%\",\n      \"ASR-ChatGPT\": \"75.89%\",\n    },\n    {\n      Instance: \"SarcasmDetection_Mustard\",\n      \"BERT-GSLM\": \"21.16%\",\n      Whisper: \"51.74%\",\n      \"ImageBind-LLM\": \"50.72%\",\n      \"Whisper-LLM\": \"46.52%\",\n      \"ASR-ChatGPT\": \"64.06%\",\n    },\n    {\n      Instance: \"DialogueActPairing_DailyTalk\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"47.45%\",\n    },\n    {\n      Instance: \"SpeakerCounting_LibriTTS-TestClean\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"19.60%\",\n    },\n    {\n      Instance: \"SpeakerVerification_LibriSpeech-TestClean\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"45.44%\",\n    },\n    {\n      Instance: \"SpeakerVerification_VCTK\",\n      \"BERT-GSLM\": \"\",\n      Whisper: \"\",\n      \"ImageBind-LLM\": \"\",\n      \"Whisper-LLM\": \"\",\n      \"ASR-ChatGPT\": \"42.62%\",\n    },\n    {\n      Instance: \"MultiSpeakerDetection_LibriSpeech-TestClean\",\n      \"BERT-GSLM\": \"22.60%\",\n      Whisper: \"56.40%\",\n      \"ImageBind-LLM\": \"37.55%\",\n      \"Whisper-LLM\": \"59.25%\",\n      \"ASR-ChatGPT\": \"46.80%\",\n    },\n    {\n      Instance: \"MultiSpeakerDetection_VCTK\",\n      \"BERT-GSLM\": \"42.95%\",\n      Whisper: \"59.65%\",\n      \"ImageBind-LLM\": \"53.25%\",\n      \"Whisper-LLM\": \"62.00%\",\n      \"ASR-ChatGPT\": \"47.25%\",\n    },\n  ],\n};\n\nconst column_fields = [\n  \"Model Name\",\n  \"BirdSoundDetection\",\n  \"ChordClassification\",\n  \"EnvironmentalSoundClassification\",\n  \"SpeechDetection\",\n  \"SpeechTextMatching\",\n  \"SpokenTermDetection\",\n  \"SpeechCommandRecognition\",\n  \"LanguageIdentification\",\n  \"EnhancementDetection\",\n  \"NoiseDetection\",\n  \"NoiseSNRLevelPrediction\",\n  \"ReverberationDetection\",\n  \"AccentClassification\",\n  \"DialogueEmotionClassification\",\n  \"EmotionRecognition\",\n  \"HowFarAreYou\",\n  \"StressDetection\",\n  \"SpoofDetection\",\n  \"DialogueActClassification\",\n  \"IntentClassification\",\n  \"SarcasmDetection\",\n  \"DialogueActPairing\",\n  \"SpeakerCounting\",\n  \"SpeakerVerification\",\n  \"MultiSpeakerDetection\",\n];\n\nconst models = [\n  \"BERT-GSLM\",\n  \"Whisper\",\n  \"ImageBind-LLM\",\n  \"Whisper-LLM\",\n  \"ASR-ChatGPT\",\n];\n\n// Generate columns based on the data\n// field is the 'key' that is used to access the data in the rows\nconst columns = [];\nfor (const field of column_fields) {\n  const column = {\n    field: field,\n    width: 150,\n    headerAlign: \"center\",\n    align: \"center\",\n    headerClassName: \"data-grid-header\",\n  };\n  columns.push(column);\n}\n\n// Generate rows based on the data\nconst rows = [];\nlet idCounter = 1;\nfor (const model in raw_data) {\n  const row = { id: idCounter, \"Model Name\": model };\n  for (const task in raw_data[model]) {\n    // Take the average of the scores for each instance under each task\n    const instances = Object.keys(raw_data[model][task]);\n    let sum = 0;\n    for (const instance of instances) {\n      sum += raw_data[model][task][instance];\n    }\n    // round to 2 decimal places\n    let score = 0;\n    score = Math.round((sum / instances.length) * 100) / 100;\n    row[task] = score;\n  }\n  rows.push(row);\n  idCounter++;\n}\n\n// Transpose version\n// Generate columns based on the data\nconst columns_transpose = [];\ncolumns_transpose.push({\n  field: \"Task\",\n  width: 200,\n  headerAlign: \"left\",\n  align: \"left\",\n  headerClassName: \"data-grid-header\",\n});\ncolumns_transpose.push({\n  field: \"Dataset\",\n  width: 200,\n  headerAlign: \"left\",\n  align: \"left\",\n  headerClassName: \"data-grid-header\",\n});\nfor (const field of models) {\n  const column = {\n    field: field,\n    width: 150,\n    headerAlign: \"center\",\n    align: \"center\",\n    headerClassName: \"data-grid-header\",\n    renderCell: (params) => (\n      params.value !== \"N/A\" ?\n      (\n      params.row.best === field ?\n      <strong>{params.value}</strong>\n      :\n      <span>{params.value}</span>\n      )\n      :\n      <span style={{color: \"#d0d0d0\"}}>N/A</span>\n    )\n  };\n  columns_transpose.push(column);\n}\n\nconst acc_to_float = (acc) => {\n  return acc !== \"N/A\" ? parseFloat(acc.slice(0,-1)) : -1;\n}\n\n// Generate rows based on the data\nconst rows_transpose_seen = [];\nconst rows_transpose_unseen = [];\nconst rows_transpose_all = [];\nfor (let index = 0; index < raw_data_seen.instances.length; index++) {\n  const instances_seen = raw_data_seen.instances[index];\n  const instances_unseen = raw_data_unseen.instances[index];\n\n  const underscore = instances_seen[\"Instance\"].indexOf(\"_\");\n  const task = instances_seen[\"Instance\"].slice(0, underscore);\n  const dataset = instances_seen[\"Instance\"].slice(underscore + 1);\n\n  const row_seen = { id: index, Task: task, Dataset: dataset };\n  const row_unseen = { id: index, Task: task, Dataset: dataset };\n  const row_all = { id: index, Task: task, Dataset: dataset };\n\n  for (const model of models) {\n    row_seen[model] = instances_seen[model] || \"N/A\";\n    row_unseen[model] = instances_unseen[model] || \"N/A\";\n    row_all[model] = instances_seen[model] || instances_unseen[model];\n  }\n\n  row_seen.best = models.reduce(function(a, b){ return acc_to_float(row_seen[a]) > acc_to_float(row_seen[b]) ? a : b });\n  row_unseen.best = models.reduce(function(a, b){ return acc_to_float(row_unseen[a]) > acc_to_float(row_unseen[b]) ? a : b });\n  row_all.best = models.reduce(function(a, b){ return acc_to_float(row_all[a]) > acc_to_float(row_all[b]) ? a : b });\n\n  rows_transpose_seen.push(row_seen);\n  rows_transpose_unseen.push(row_unseen);\n  rows_transpose_all.push(row_all);\n}\n\nexport {\n  columns,\n  rows,\n  columns_transpose,\n  rows_transpose_seen,\n  rows_transpose_unseen,\n  rows_transpose_all,\n};\n","import * as React from \"react\";\nimport {\n  DataGrid,\n  GridRowsProp,\n  GridColDef,\n  GridToolbarContainer,\n  GridToolbarColumnsButton,\n  GridToolbarFilterButton,\n  GridToolbarExport,\n  GridToolbarDensitySelector,\n} from \"@mui/x-data-grid\";\nimport {\n  //columns,\n  //rows,\n  columns_transpose,\n  rows_transpose_seen,\n  rows_transpose_unseen,\n  rows_transpose_all,\n} from \"./leaderboardData.js\";\nimport { styled } from \"@mui/material/styles\";\nimport {\n  Box,\n  Tab,\n  Tabs,\n  Paper,\n  Typography,\n  IconButton,\n  Popover\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport HelpIcon from \"@material-ui/icons/Help\";\n\nconst StyledDataGrid = styled(DataGrid)(({ theme }) => ({\n  \"& .MuiDataGrid-columnHeader, .MuiDataGrid-cell\": {\n    borderRight: \"1px solid #d0d0d0\",\n  },\n  \"& .MuiDataGrid-columnHeader\": {\n    backgroundColor: \"#e0e0e0\",\n  },\n}));\n\nexport default function App() {\n  const [rows, setrows] = useState(rows_transpose_all);\n  const [columns, setcolumns] = useState(columns_transpose);\n\n  const [value, setValue] = React.useState(0);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const OpenInfo = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const CloseInfo = () => {\n    setAnchorEl(null);\n  };\n\n  const infoOpen = Boolean(anchorEl);\n  const infoId = infoOpen ? 'simple-popover' : undefined;\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    if (newValue === 0) {\n      setrows(rows_transpose_all);\n    } else if (newValue === 1) {\n      setrows(rows_transpose_seen);\n    } else if (newValue === 2) {\n      setrows(rows_transpose_unseen);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"calc(100vh - 160px)\",\n        maxWidth: \"1170px\",\n        margin: \"auto\",\n      }}\n    >\n      <Paper variant=\"outlined\">\n        <Box\n          sx={{\n            height: \"48px\",\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            gap: \"0.5em\",\n          }}\n        >\n          <div style={{ width: \"1em\" }}></div>\n          <Typography variant=\"h5\">Leaderboard</Typography>\n          <IconButton size=\"small\" onClick={OpenInfo}>\n            <HelpIcon fontSize=\"inherit\" />\n          </IconButton>\n          <Popover\n            id={infoId}\n            open={infoOpen}\n            anchorEl={anchorEl}\n            onClose={CloseInfo}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n            }}\n          >\n            <Typography style={{padding: \"1em\"}}>\n              <strong>Seen</strong>: The model has been trained on this task.<br />\n              <strong>Unseen</strong>: The model has not been trained on this task.<br />\n              All metrics for the current benchmark tasks are <strong>ACCURACY</strong>.\n            </Typography>\n          </Popover>\n        </Box>\n        <Box sx={{ backgroundColor: \"#f0f0f0\" }}>\n          <Tabs\n            value={value}\n            indicatorColor=\"secondary\"\n            textColor=\"secondary\"\n            onChange={handleChange}\n          >\n            <Tab label=\"All\" />\n            <Tab label=\"Seen\" />\n            <Tab label=\"Unseen\" />\n          </Tabs>\n        </Box>\n      </Paper>\n      <StyledDataGrid\n        rows={rows}\n        columns={columns}\n        disableRowSelectionOnClick\n        hideFooter\n      />\n    </div>\n  );\n}\n","import { Controller } from \"react-hook-form\";\nimport { TextField, Popper } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        border: \"1px solid\",\n        padding: theme.spacing(0.7),\n        backgroundColor: theme.palette.background.paper,\n        fontSize: \"medium\",\n    },\n}));\nconst FormTextField = ({\n    control,\n    className,\n    name,\n    label,\n    description,\n    rules,\n    error,\n    helperText,\n}) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const classes = useStyles();\n    return (\n        <>\n            <Controller\n                control={control}\n                name={name}\n                render={({ field }) => (\n                    <TextField\n                        {...field}\n                        className={className}\n                        label={label}\n                        onFocus={(e) => setAnchorEl(e.currentTarget)}\n                        onBlur={(e) => setAnchorEl(null)}\n                        fullWidth\n                        error={error}\n                        helperText={helperText}\n                    />\n                )}\n                rules={rules}\n            />\n            <Popper\n                open={Boolean(anchorEl)}\n                anchorEl={anchorEl}\n                placement=\"right-start\"\n                transition\n                style={{ maxWidth: \"27%\" }}\n            >\n                <div className={classes.paper}>{description}</div>\n            </Popper>\n        </>\n    );\n};\nexport default FormTextField;\n","import React, { useRef, useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm, Controller } from \"react-hook-form\";\n\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\n\nimport { Typography, Button } from \"@material-ui/core\";\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nimport { AuthContext } from \"../context/auth-context\";\nimport { formVal } from \"../utils/form-validator\";\nimport { tracks } from \"../Data\";\nimport FormTextField from \"./FormTextfield\";\nimport { SubSubSection } from \"./Sections\";\nimport { capitalizeFirstLetter } from \"./Utilies\";\nimport { HashLink } from \"react-router-hash-link\";\nimport { Section } from \"./Sections\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"60%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n    },\n    textField: {\n        marginBottom: theme.spacing(1),\n        width: \"80%\",\n    },\n    Button: {\n        display: \"block\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        marginTop: theme.spacing(2),\n        marginBottom: \"3%\",\n    },\n}));\n\nexport default function PublicForm(){\n    const classes = useStyles();\n    const filePickerRef = useRef();\n    const history = useHistory();\n    const [isLoading, setIsLoading] = useState(false);\n\n    const {\n        control,\n        handleSubmit,\n        register,\n        formState: { errors },\n        setValue,\n        watch,\n    } = useForm({\n        defaultValues: {\n            submitName: \"\",\n            modelURL: \"\",\n            modelDesc: \"\",\n            stride: \"\",\n            inputFormat: \"\",\n            corpus: \"\",\n            paramDesc: \"\",\n            paramShared: \"\",\n            fineTunedParam: \"\",\n            taskSpecParam: \"\",\n            task: \"1\",\n        },\n    });\n\n    const { ref, ...rest } = register(\"file\", formVal.file);\n\n    const auth = useContext(AuthContext);\n    const watchFile = watch(\"file\");\n\n    const submitHandler = async (data) => {\n        try {\n            setIsLoading(true);\n            const formData = new FormData();\n            formData.append(\"submitName\", data.submitName);\n            formData.append(\"modelURL\", data.modelURL);\n            formData.append(\"modelDesc\", data.modelDesc);\n            formData.append(\"stride\", data.stride);\n            formData.append(\"inputFormat\", data.inputFormat);\n            formData.append(\"corpus\", data.corpus);\n            formData.append(\"paramDesc\", data.paramDesc);\n            formData.append(\"paramShared\", data.paramShared);\n            formData.append(\"fineTunedParam\", data.fineTunedParam);\n            formData.append(\"taskSpecParam\", data.taskSpecParam);\n            formData.append(\"task\", data.task);\n            formData.append(\"file\", data?.file[0]);\n            const res = await axios({\n                method: \"post\",\n                url: \"/api/submission\",\n                data: formData,\n                headers: {\n                    Authorization: \"Bearer \" + auth.token,\n                },\n            })\n                .then((res) => {\n                    setIsLoading(false);\n                    swal({\n                        title: \"Susscess\",\n                        text: res.data.message,\n                        icon: \"success\",\n                    }).then(() => history.push(\"/profile\"));\n                })\n                .catch((err) => {\n                    setIsLoading(false);\n                    swal({\n                        title: \"Error\",\n                        text: err.response.data.message,\n                        icon: \"error\",\n                    });\n                });\n        } catch (err) { }\n    };\n\n    function PublicPart() {\n        return (\n            <Section>\n                <SubSubSection>\n                    <Typography variant=\"body1\" color=\"textSecondary\">\n                        Make sure to read the <HashLink to=\"/rules\">Rules</HashLink> before submitting to the <HashLink to=\"/leaderboard?track=constrained&subset=Paper\">SUPERB Benchmark</HashLink> or the <HashLink to=\"/leaderboard?track=constrained&subset=Public+Set\">SUPERB Challenge Public-set</HashLink>.\n                    </Typography>\n                </SubSubSection>\n                <form\n                    className={classes.root}\n                    autoComplete=\"off\"\n                    onSubmit={handleSubmit(submitHandler)}\n                >\n                    <FormTextField\n                        control={control}\n                        className={classes.textField}\n                        name=\"submitName\"\n                        label=\"Submission Name*\"\n                        description=\"A short name for your system, which will be displayed on\n                        the leaderboard. (Required)\"\n                        rules={formVal.submitName}\n                        error={errors.submitName}\n                        helperText={\n                            errors.submitName && errors.submitName.message\n                        }\n                    />\n                    <FormTextField\n                        control={control}\n                        className={classes.textField}\n                        name=\"modelURL\"\n                        label=\"Model URL/Github\"\n                        description=\"A Github URL for your model code repository. (Optional)\"\n                        rules={formVal.modelURL}\n                        error={errors.modelURL}\n                        helperText={errors.modelURL && errors.modelURL.message}\n                    />\n                    <FormTextField\n                        control={control}\n                        className={classes.textField}\n                        name=\"modelDesc\"\n                        label=\"Model Description*\"\n                        description=\"A sentence or two describing your system. Make sure to mention any outside data you use. (Required)\"\n                        rules={formVal.modelDesc}\n                        error={errors.modelDesc}\n                        helperText={\n                            errors.modelDesc && errors.modelDesc.message\n                        }\n                    />\n                    <FormTextField\n                        control={control}\n                        className={classes.textField}\n                        name=\"stride\"\n                        label=\"Stride*\"\n                        description=\"Your stride width (ms). (Required)\"\n                        rules={formVal.stride}\n                        error={errors.stride}\n                        helperText={errors.stride && errors.stride.message}\n                    />\n                    <FormTextField\n                        control={control}\n                        className={classes.textField}\n                        name=\"inputFormat\"\n                        label=\"Input Format*\"\n                        description=\"The type of input format you use. e.g., waveform, FBANK. (Required) \"\n                        rules={formVal.inputFormat}\n                        error={errors.inputFormat}\n                        helperText={\n                            errors.inputFormat && errors.inputFormat.message\n                        }\n                    />\n\n                    <FormTextField\n                        control={control}\n                        className={classes.textField}\n                        name=\"corpus\"\n                        label=\"Corpus*\"\n                        description=\"The type of corpus you use. e.g., LS 50 hr, LL 60k hr. (Required)\"\n                        rules={formVal.corpus}\n                        error={errors.corpus}\n                        helperText={errors.corpus && errors.corpus.message}\n                    />\n\n                    <FormTextField\n                        control={control}\n                        className={classes.textField}\n                        name=\"paramDesc\"\n                        label=\"Parameter Description*\"\n                        description=\"A sentence or explaining how you share parameters accross tasks (or stating that you don't share parameters). (Required)\"\n                        rules={formVal.paramDesc}\n                        error={errors.paramDesc}\n                        helperText={\n                            errors.paramDesc && errors.paramDesc.message\n                        }\n                    />\n\n                    <FormTextField\n                        control={control}\n                        className={classes.textField}\n                        name=\"paramShared\"\n                        label=\"Parameter shared without fine-tuning*\"\n                        description=\"The total number of parameters in your model which don't require task spesific fine-tuning (only numeric numbers allowed). (Required)\"\n                        rules={formVal.paramShared}\n                        error={errors.paramShared}\n                        helperText={\n                            errors.paramShared && errors.paramShared.message\n                        }\n                    />\n                    <FormTextField\n                        control={control}\n                        className={classes.textField}\n                        name=\"fineTunedParam\"\n                        label=\"Fine-tuned parameters\"\n                        description=\"The number of parameters in your model which are common but require task specific fine-tuning (only numeric numbers allowed). (Optional)\"\n                        rules={formVal.fineTunedParam}\n                        error={errors.fineTunedParam}\n                        helperText={\n                            errors.fineTunedParam &&\n                            errors.fineTunedParam.message\n                        }\n                    />\n                    <FormTextField\n                        control={control}\n                        className={classes.textField}\n                        name=\"taskSpecParam\"\n                        label=\"Task-Specific parameters\"\n                        description=\"The number of parameters in your model which are task specific and not used by any other tasks (only numeric numbers allowed). (Optional)\"\n                        rules={formVal.taskSpecParam}\n                        error={errors.taskSpecParam}\n                        helperText={\n                            errors.taskSpecParam && errors.taskSpecParam.message\n                        }\n                    />\n\n                    <FormControl\n                        component=\"fieldset\"\n                        style={{ marginTop: \"2%\" }}\n                    >\n                        <FormLabel component=\"legend\"><HashLink to=\"/rules\">Track</HashLink></FormLabel>\n                        <Controller\n                            control={control}\n                            name=\"task\"\n                            render={({ field }) => (\n                                <RadioGroup\n                                    row\n                                    aria-label=\"position\"\n                                    {...field}\n                                >\n                                    {tracks.map((track, index) => {\n                                        return (\n                                            <ThemeProvider theme={track.theme}>\n                                                <FormControlLabel\n                                                    value={(\n                                                        index + 1\n                                                    ).toString()}\n                                                    control={\n                                                        <Radio color=\"primary\" />\n                                                    }\n                                                    label={\n                                                        <Typography color=\"primary\">\n                                                            {capitalizeFirstLetter(\n                                                                track.name.toLowerCase()\n                                                            )}\n                                                        </Typography>\n                                                    }\n                                                    color=\"primary\"\n                                                />\n                                            </ThemeProvider>\n                                        );\n                                    })}\n                                </RadioGroup>\n                            )}\n                        />\n                    </FormControl>\n                    <input\n                        type=\"file\"\n                        accept=\".zip\"\n                        style={{ display: \"none\" }}\n                        name=\"file\"\n                        ref={(e) => {\n                            ref(e);\n                            filePickerRef.current = e;\n                        }}\n                        onChange={(e) => setValue(\"file\", e.target.files)}\n                    />\n                    <Button\n                        className={classes.Button}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => filePickerRef.current.click()}\n                    >\n                        {watchFile && watchFile[0]?.name\n                            ? watchFile[0]?.name\n                            : \"Select zip\"}\n                    </Button>\n                    <span style={{ color: \"red\" }}>\n                        {errors.file && errors.file.message}\n                    </span>\n                    <Button\n                        className={classes.Button}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        type=\"submit\"\n                        disabled={isLoading}\n                    >\n                        {isLoading ? \"Submitting...\" : \"Submit\"}\n                    </Button>\n                </form>\n            </Section>\n        )\n    }\n\n    return <PublicPart />;\n} ","import React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm, Controller } from \"react-hook-form\";\n\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\n\nimport { Typography, Button } from \"@material-ui/core\";\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nimport { AuthContext } from \"../context/auth-context\";\nimport { formVal } from \"../utils/form-validator\";\nimport { tracks } from \"../Data\";\nimport FormTextField from \"./FormTextfield\";\nimport { Section, SubSubSection } from \"./Sections\";\nimport { capitalizeFirstLetter } from \"./Utilies\";\nimport { HashLink } from \"react-router-hash-link\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"60%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n    },\n    textField: {\n        marginBottom: theme.spacing(1),\n        width: \"80%\",\n    },\n    Button: {\n        display: \"block\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        marginTop: theme.spacing(2),\n        marginBottom: \"3%\",\n    },\n}));\n\nexport default function HiddenForm(){\n    const classes = useStyles();\n    const history = useHistory();\n    const [isLoading, setIsLoading] = useState(false);\n\n    const {\n        control,\n        handleSubmit,\n        formState: { errors },\n    } = useForm({\n        defaultValues: {\n            submitName: \"\",\n            huggingfaceOrganizationName: \"\",\n            huggingfaceRepoName: \"\",\n            huggingfaceCommonHash: \"\",\n            paramShared: \"\",\n            task: \"1\",\n        },\n    });\n\n    const auth = useContext(AuthContext);\n    const submitHandler = async (data) => {\n        try {\n            setIsLoading(true);\n            const formData = new FormData();\n            formData.append(\"submitName\", data.submitName);\n            formData.append(\"modelDesc\", data.modelDesc);\n            formData.append(\"huggingfaceOrganizationName\", data.huggingfaceOrganizationName);\n            formData.append(\"huggingfaceRepoName\", data.huggingfaceRepoName);\n            formData.append(\"huggingfaceCommonHash\", data.huggingfaceCommonHash);\n            formData.append(\"paramShared\", data.paramShared);\n            formData.append(\"task\", data.task);\n\n            const res = await axios({\n                method: \"post\",\n                url: \"/api/hiddensubmission\",\n                data: formData,\n                headers: {\n                    Authorization: \"Bearer \" + auth.token,\n                },\n            })\n                .then((res) => {\n                    setIsLoading(false);\n                    swal({\n                        title: \"Susscess\",\n                        text: res.data.message,\n                        icon: \"success\",\n                    }).then(() => history.push(\"/profile\"));\n                })\n                .catch((err) => {\n                    setIsLoading(false);\n                    swal({\n                        title: \"Preparing...\",\n                        text: err.response.data.message,\n                        icon: \"error\",\n                    });\n                });\n        } catch (err) { }\n    };\n\n    function HiddenPart() {\n        return (\n            <Section>\n                <SubSubSection>\n                    <Typography variant=\"body1\" color=\"textSecondary\">\n                        <p>Please <a target=\"_blank\" href=\"https://huggingface.co/superb/superb-submission\">Upload your model</a> before the submitting to the <HashLink to=\"/leaderboard?track=constrained&subset=Hidden+Dev+Set\">SUPERB Challenge Hidden-set</HashLink>.</p>\n                        <p>If you wish to submit pre-trained models in non-PyTorch frameworks, please <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSe52jYL2Yk9oYqXfg_Bg0Sjp01a6HSLUhY5VohsZOE5sNmgsw/viewform\">fill this form</a>.</p>\n                        <p>If you are not feasible to submit the pre-trained model, please <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSdA44nArlIDfGV63WwtwXer4WAPQO1aBwEpAjDSNjbMQN-GJQ/viewform\">fill this form</a> for us to see how to help!</p>\n                    </Typography>\n                </SubSubSection>\n                <form\n                    className={classes.root}\n                    autoComplete=\"off\"\n                    onSubmit={handleSubmit(submitHandler)}\n                >\n                    <FormTextField\n                        control={control}\n                        className={classes.textField}\n                        name=\"submitName\"\n                        label=\"Submission Name*\"\n                        description=\"A short name for your system, which will be displayed on\n                        the leaderboard. (Required)\"\n                        rules={formVal.submitName}\n                        error={errors.submitName}\n                        helperText={\n                            errors.submitName && errors.submitName.message\n                        }\n                    />\n\n                    <FormTextField\n                        control={control}\n                        className={classes.textField}\n                        name=\"modelDesc\"\n                        label=\"Model Description*\"\n                        description=\"A sentence or two describing your system. Make sure to mention any outside data you use. (Required)\"\n                        rules={formVal.modelDesc}\n                        error={errors.modelDesc}\n                        helperText={\n                            errors.modelDesc && errors.modelDesc.message\n                        }\n                    />\n\n                    <FormTextField\n                        control={control}\n                        className={classes.textField}\n                        name=\"huggingfaceOrganizationName\"\n                        label=\"Huggingface Organization Name*\"\n                        description=\"Organization Name of your huggingface model hub. (Required)\"\n                        rules={formVal.huggingfaceOrganizationName}\n                        error={errors.huggingfaceOrganizationName}\n                        helperText={\n                            errors.huggingfaceOrganizationName && errors.huggingfaceOrganizationName.message\n                        }\n                    />\n\n                    <FormTextField\n                        control={control}\n                        className={classes.textField}\n                        name=\"huggingfaceRepoName\"\n                        label=\"Huggingface Repository Name*\"\n                        description=\"Repository Name for your model. (Required)\"\n                        rules={formVal.huggingfaceRepoName}\n                        error={errors.huggingfaceRepoName}\n                        helperText={\n                            errors.huggingfaceRepoName && errors.huggingfaceRepoName.message\n                        }\n                    />\n\n                    <FormTextField\n                        control={control}\n                        className={classes.textField}\n                        name=\"huggingfaceCommonHash\"\n                        label=\"Huggingface Commit Hash (full 40 characters)*\"\n                        description=\"Commit hash (full 40 characters) of your model. (Required)\"\n                        rules={formVal.huggingfaceCommonHash}\n                        error={errors.huggingfaceCommonHash}\n                        helperText={\n                            errors.huggingfaceCommonHash && errors.huggingfaceCommonHash.message\n                        }\n                    />\n\n                    <FormTextField\n                        control={control}\n                        className={classes.textField}\n                        name=\"paramShared\"\n                        label=\"Parameter shared without fine-tuning*\"\n                        description=\"The total number of parameters in your model which don't require task spesific fine-tuning (only numeric numbers allowed). (Required)\"\n                        rules={formVal.paramShared}\n                        error={errors.paramShared}\n                        helperText={\n                            errors.paramShared && errors.paramShared.message\n                        }\n                    />\n\n                    <FormControl\n                        component=\"fieldset\"\n                        style={{ marginTop: \"2%\" }}\n                    >\n                        <FormLabel component=\"legend\"><HashLink to=\"/rules\">Track</HashLink></FormLabel>\n                        <Controller\n                            control={control}\n                            name=\"task\"\n                            render={({ field }) => (\n                                <RadioGroup\n                                    row\n                                    aria-label=\"position\"\n                                    {...field}\n                                >\n                                    {[tracks[0]].map((track, index) => {\n                                        return (\n                                            <ThemeProvider theme={track.theme}>\n                                                <FormControlLabel\n                                                    value={(\n                                                        index + 1\n                                                    ).toString()}\n                                                    control={\n                                                        <Radio color=\"primary\" />\n                                                    }\n                                                    label={\n                                                        <Typography color=\"primary\">\n                                                            {capitalizeFirstLetter(\n                                                                track.name.toLowerCase()\n                                                            )}\n                                                        </Typography>\n                                                    }\n                                                    color=\"primary\"\n                                                />\n                                            </ThemeProvider>\n                                        );\n                                    })}\n                                </RadioGroup>\n                            )}\n                        />\n                    </FormControl>\n                    <Button\n                        className={classes.Button}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        type=\"submit\"\n                        disabled={isLoading}\n                    >\n                        {isLoading ? \"Submitting...\" : \"Submit\"}\n                    </Button>\n                </form>\n            </Section>\n        )\n    }\n\n    return <HiddenPart />;\n} ","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  Modal,\n  Backdrop,\n  Fade,\n  Paper,\n  Switch,\n  FormGroup,\n  FormControlLabel,\n  Grid,\n  Box,\n  Typography,\n} from \"@material-ui/core\";\nimport { blueGrey, grey, red, orange, green } from \"@material-ui/core/colors\";\n\nimport { Section, SubSection } from \"./Sections\";\nimport { SubTitle } from \"./Titles\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nexport default function TransitionsModal({\n  tableInstance,\n  modalOpenRef = null,\n}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const { allColumns, setGlobalFilter } = tableInstance;\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const theme = useTheme();\n  return (\n    <div>\n      {modalOpenRef ? (\n        <div ref={modalOpenRef} onClick={handleOpen} />\n      ) : (\n        <button type=\"button\" onClick={handleOpen}>\n          react-transition-group\n        </button>\n      )}\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <Box width=\"85%\" maxWidth={700}>\n            <Paper>\n              <Box\n                padding={theme.spacing(4, 6)}\n                margin=\"auto\"\n                maxHeight=\"80vh\"\n                overflow=\"auto\"\n              >\n                <SubSection>\n                  <SubTitle title=\"Leaderboard\" />\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    All the submissions are presented in a single table. You can\n                    use the buttons below to choose which tracks you are\n                    interested or what information (column) you wish to compare.\n                    The default ranking of all submissions are sorted by a\n                    randomly selected task, so the ranking will be different\n                    everytime you refresh the page. You can check the column\n                    with the{\" \"}\n                    <span style={{ color: green[300] }}>green task name</span>{\" \"}\n                    for the current sorting column.\n                  </Typography>\n                </SubSection>\n                <SubSection>\n                  <SubTitle title=\"Toggles\" />\n                  <Box margin={theme.spacing(4, \"auto\", 0)}>\n                    <Grid container direction=\"row\">\n                      {allColumns.map((column) => {\n                        return (\n                          <Grid item xs={12} sm={6} md={4} lg={3}>\n                            <FormControlLabel\n                              control={\n                                <Switch\n                                  checked={column.isVisible}\n                                  onChange={() => {\n                                    column.toggleHidden();\n                                  }}\n                                  name={column.Header}\n                                />\n                              }\n                              label={column.Header}\n                            />\n                          </Grid>\n                        );\n                      })}\n                    </Grid>\n                  </Box>\n                </SubSection>\n              </Box>\n            </Paper>\n          </Box>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport {\n    useTable,\n    useBlockLayout,\n    useSortBy,\n    useResizeColumns,\n    useGlobalFilter,\n} from \"react-table\";\nimport { useSticky } from \"react-table-sticky\";\nimport InsertLinkIcon from \"@material-ui/icons/InsertLink\";\n\nimport { useTheme, fade } from \"@material-ui/core/styles\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { blueGrey, grey, red, orange, green } from \"@material-ui/core/colors\";\nimport { Typography, TextField } from \"@material-ui/core\";\nimport { Title } from \"./components/Titles\";\nimport { Section } from \"./components/Sections\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport Button from \"@material-ui/core/Button\";\nimport Icon from \"@material-ui/core/Icon\";\nimport CropSquareIcon from \"@material-ui/icons/CropSquare\";\nimport {\n    individual_submission_columnInfo,\n    individual_submission_hidden_columnInfo,\n    leaderboard_selections,\n} from \"./Data\";\nimport { AuthContext } from \"./context/auth-context\";\nimport swal from \"sweetalert\";\nimport Model from \"./components/Modal\";\nimport TrackSelect from \"./components/TrackSelect\";\nimport SubsetSelect from \"./components/SubsetSelect\";\nimport { overall_metric_adder } from \"./overall_metrics\";\nimport { Box, Divider, FormControl, InputLabel, Select, MenuItem, Input, FormControlLabel, Switch } from \"@material-ui/core\";\nimport { NumericalSort, is_number_and_not_nan } from \"./components/Utilies\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Styles = styled.div`\n  .table {\n    outline: 1px solid #ddd;\n\n    .click-btn {\n      cursor: pointer;\n    }\n    \n    .th,\n    .td {\n      background-color: ${(props) => props.theme.palette.primary.main};\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      border: 0.2px solid #ddd;\n      vertical-align: middle;\n      padding: ${(props) => props.theme.spacing(1, 1)};\n    }\n\n    .th {\n      font-weight: bold;\n      padding: ${(props) => props.theme.spacing(1.5, 1)};\n    }\n\n    .toggle {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    &.sticky {\n      overflow: scroll;\n      .header,\n      .footer {\n        position: sticky;\n        z-index: 1;\n        width: fit-content;\n      }\n\n      .header {\n        top: 0;\n        box-shadow: 0px 3px 3px #ccc;\n      }\n\n      .footer {\n        bottom: 0;\n        box-shadow: 0px -3px 3px #ccc;\n      }\n\n      .body {\n        position: relative;\n        z-index: 0;\n      }\n\n      [data-sticky-td] {\n        position: sticky;\n      }\n\n      [data-sticky-last-left-td] {\n        box-shadow: 2px 2px 3px #ccc;\n      }\n\n      [data-sticky-first-right-td] {\n        box-shadow: -2px -2px 3px #ccc;\n      }\n    }\n  }\n\n  .resizer {\n    display: inline-block;\n    background: ${(props) => `${fade(props.theme.palette.text.primary, 0.2)}`};\n    width: ${(props) => `${props.theme.spacing(2)}px`};\n    height: 100%;\n    position: absolute;\n    right: 0;\n    top: 0;\n    transform: translateX(50%);\n    z-index: 1;\n    ${\"\" /* prevents from scrolling while dragging on touch devices */}\n    touch-action:none;\n\n    &.isResizing, &:hover {\n      background: ${(props) =>\n        `${fade(props.theme.palette.text.primary, 0.6)}`};\n    }\n`;\n\nfunction Table({ columns, data, height = \"500px\", tableControlRef = null }) {\n    const theme = useTheme();\n    const defaultColumn = React.useMemo(\n        () => ({\n            minWidth: 10,\n            width: 150,\n            maxWidth: 400,\n        }),\n        []\n    );\n    const defaultSortby = React.useMemo(() => [\n        {\n            id: \"aoeTimeUpload\",\n            desc: true,\n        },\n    ]);\n\n    const tableInstance = useTable(\n        {\n            columns,\n            data,\n            defaultColumn,\n            initialState: {\n                hiddenColumns: [\n                    \"modelURL\",\n                    \"stride\",\n                    \"inputFormat\",\n                    \"corpus\",\n                    \"paramDesc\",\n                    \"paramShared\",\n                    \"fineTunedParam\",\n                    \"taskSpecParam\",\n                    \"stateInfo\",\n                    \"submitUUID\",\n                ],\n                sortBy: defaultSortby,\n            },\n        },\n        useSortBy,\n        useBlockLayout,\n        useResizeColumns,\n        useSticky\n    );\n\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n        tableInstance;\n\n    return (\n        <Styles theme={theme}>\n            <Model\n                tableInstance={tableInstance}\n                modalOpenRef={tableControlRef}\n            />\n            <div\n                {...getTableProps()}\n                className=\"table sticky\"\n                style={{\n                    width: \"fit-content\",\n                    maxWidth: \"100%\",\n                    maxHeight: height,\n                    margin: \"auto\",\n                }}\n            >\n                <div className=\"header\">\n                    {headerGroups.map((headerGroup) => (\n                        <div\n                            {...headerGroup.getHeaderGroupProps()}\n                            className=\"tr\"\n                        >\n                            {headerGroup.headers.map((column) => {\n                                let color =\n                                    column.isSortedDesc == undefined ||\n                                        column.higherBetter == undefined\n                                        ? theme.palette.text.primary\n                                        : column.isSortedDesc ==\n                                            column.higherBetter\n                                            ? green[300]\n                                            : red[300];\n\n                                return (\n                                    <div\n                                        {...column.getHeaderProps()}\n                                        className=\"th\"\n                                    >\n                                        <div\n                                            {...column.getSortByToggleProps()}\n                                            className=\"toggle\"\n                                        >\n                                            <span\n                                                style={{\n                                                    margin: \"0px 1px\",\n                                                    color: color,\n                                                }}\n                                            >\n                                                {column.render(\"Header\")}\n                                            </span>\n                                            {column.higherBetter != undefined &&\n                                                (column.higherBetter ? (\n                                                    <ArrowUpwardIcon\n                                                        style={{\n                                                            fontSize: 16,\n                                                            color: color,\n                                                        }}\n                                                    />\n                                                ) : (\n                                                    <ArrowDownwardIcon\n                                                        style={{\n                                                            fontSize: 16,\n                                                            color: color,\n                                                        }}\n                                                    />\n                                                ))}\n                                        </div>\n                                        <div\n                                            {...column.getResizerProps()}\n                                            className={`resizer ${column.isResizing\n                                                ? \"isResizing\"\n                                                : \"\"\n                                                }`}\n                                        />\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    ))}\n                </div>\n\n                <div {...getTableBodyProps()} className=\"body\">\n                    {rows.map((row, i) => {\n                        prepareRow(row);\n                        return (\n                            <div {...row.getRowProps()} className=\"tr\">\n                                {row.cells.map((cell) => {\n                                    return (\n                                        <div\n                                            {...cell.getCellProps()}\n                                            className=\"td\"\n                                        >\n                                            {cell.render(\"Cell\")}\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </Styles>\n    );\n}\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction Profile(props) {\n    let query = useQuery();\n\n    const theme = useTheme();\n    const auth = useContext(AuthContext);\n    const [allSubmissionData, setAllSubmissionData] = useState([]);\n    const [allHiddenSubmissionData, setAllHiddenSubmissionData] = useState([]);\n    const [shownData, setShownData] = useState([]);\n    const [shownHiddenData, setShownHiddenData] = useState([]);\n    const [task, setTask] = useState(query.get(\"track\") || \"constrained\");\n    const [username, setUsername] = useState(\"\");\n    const [resetUserName, setResetUserName] = useState(\"\");\n    const [dailyCounts, setDailyCounts] = useState(0);\n    const [weeklyCounts, setWeeklyCounts] = useState(0);\n    const [hiddenDailyCounts, setHiddenDailyCounts] = useState(0);\n    const [hiddenWeeklyCounts, setHiddenWeeklyCounts] = useState(0);\n    const [subset, setSubset] = useState(query.get(\"subset\") || \"Paper\");\n    const track = subset.toLowerCase().includes(\"hidden\") ? \"hidden\" : \"public\"\n    const memoizedNumericSort = React.useCallback(NumericalSort);\n\n    // edit hidden score\n    const [editTask, setEditTask] = useState('');\n    const [entireHiddenSubmissionData, setEntireHiddenSubmissionData] = useState([]);\n    const [showAll, setShowAll] = useState(true);\n\n    const mapping_array = {\n        CONSTRAINED: \"constrained\",\n        LESS_CONSTRAINED: \"less-constrained\",\n        UNCONSTRAINED: \"unconstrained\",\n    };\n\n    const getUserName = async () => {\n        await axios({\n            method: \"get\",\n            url: \"/api/user/info\",\n            headers: {\n                Authorization: \"Bearer \" + auth.token,\n            },\n        })\n            .then((res) => {\n                setUsername(res.data.username);\n                setDailyCounts(res.data.daily_counts);\n                setWeeklyCounts(res.data.weekly_counts);\n                setHiddenDailyCounts(res.data.hidden_daily_counts);\n                setHiddenWeeklyCounts(res.data.hidden_weekly_counts);\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    };\n\n    const handleResetUserName = async () => {\n        await axios({\n            method: \"patch\",\n            url: \"/api/user/info\",\n            headers: {\n                Authorization: \"Bearer \" + auth.token,\n            },\n            data: {\n                name: resetUserName,\n            },\n        })\n            .then((res) => {\n                setUsername(res.data.newUserName);\n                swal({\n                    text: `Reset to ${res.data.newUserName}!`,\n                    icon: \"success\",\n                });\n            })\n            .catch((error) => {\n                swal({ text: \"Internal server error\", icon: \"error\" });\n                console.error(error);\n            });\n    };\n\n    const getIndividualSubmission = async () => {\n        await axios({\n            method: \"get\",\n            url: \"/api/submissions\",\n            headers: {\n                Authorization: \"Bearer \" + auth.token,\n            },\n        })\n            .then((res) => {\n                setAllSubmissionData(res.data.submission_info);\n                // console.log(res.data.submission_info);\n                task === \"all\"\n                    ? setShownData(res.data.submission_info)\n                    : setShownData(\n                        res.data.submission_info.filter(\n                            (data) => mapping_array[data.task] === task\n                        )\n                    );\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n        await axios({\n            method: \"get\",\n            url: \"/api/hiddensubmissions\",\n            headers: {\n                Authorization: \"Bearer \" + auth.token,\n            },\n        })\n            .then((res) => {\n                setAllHiddenSubmissionData(res.data.submission_info);\n                // console.log(res.data.submission_info);\n                task === \"all\"\n                    ? setShownHiddenData(res.data.submission_info)\n                    : setShownHiddenData(\n                        res.data.submission_info.filter(\n                            (data) => mapping_array[data.task] === task\n                        )\n                    );\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n        if (auth.isAdmin) {\n            await axios({\n                method: \"get\",\n                url: \"/api/hiddensearch/\",\n                headers: {\n                    Authorization: \"Bearer \" + auth.token,\n                },\n            })\n                .then((res) => {\n                    setEntireHiddenSubmissionData(res.data.submission_info)\n                })\n                .catch((error) => {\n                    console.error(error);\n                });\n        }\n    };\n\n    const onTaskChange = (e) => {\n        setTask(e.target.value);\n\n        // push history\n        const url = new URL(window.location);\n        url.searchParams.set(\"track\", e.target.value);\n        window.history.pushState({}, '', url);\n\n        let setShown = track === \"hidden\" ? setShownHiddenData : setShownData;\n        let allData = track === \"hidden\" ? allHiddenSubmissionData : allSubmissionData;\n        e.target.value === \"all\"\n            ? setShown(allData)\n            : setShown(\n                allData.filter(\n                    (data) => mapping_array[data.task] === e.target.value\n                )\n            );\n    };\n\n    const handleNameOnChange = (e) => {\n        setResetUserName(e.target.value);\n    };\n\n    const setShowOnLeaderboard = async (submission_id) => {\n        await axios({\n            method: \"patch\",\n            url: (track == \"hidden\" ? \"/api/hiddensubmission/\" : \"/api/submission/\") + submission_id,\n            headers: {\n                Authorization: \"Bearer \" + auth.token,\n            },\n        })\n            .then((res) => {\n                swal({ text: res.data.message, icon: \"success\" });\n                getIndividualSubmission();\n            })\n            .catch((error) => {\n                swal({ text: \"Internal server error\", icon: \"error\" });\n            });\n    };\n    const parseShowCell = ({ row, value }) => {\n        if (value === \"NO\")\n            return (\n                <CropSquareIcon\n                    className=\"click-btn\"\n                    onClick={() => setShowOnLeaderboard(row.original.submitUUID)}\n                ></CropSquareIcon>\n            );\n        else\n            return (\n                <CheckIcon\n                    className=\"click-btn\"\n                    style={{ color: green[500] }}\n                    onClick={() => setShowOnLeaderboard(row.original.submitUUID)}\n                ></CheckIcon>\n            );\n    };\n\n    const parseDownload = ({ row }) => {\n        return (\n            <InsertLinkIcon\n                className=\"click-btn\"\n                onClick={() => downloadPreviousUpload(row.allCells[16].value)}\n            ></InsertLinkIcon>\n        );\n    };\n\n    const downloadPreviousUpload = async (submission_id) => {\n        await axios({\n            method: \"get\",\n            url: \"/api/submission/\" + submission_id,\n            headers: {\n                Authorization: \"Bearer \" + auth.token,\n            },\n            responseType: \"blob\",\n        })\n            .then((data) => {\n                let blob = new Blob([data.data], { type: \"application.zip\" });\n                const link = document.createElement(\"a\");\n                const url = URL.createObjectURL(blob);\n                link.href = url;\n                link.download = \"predict.zip\";\n                link.click();\n            })\n            .catch((error) => {\n                swal({ text: \"Internal server error\", icon: \"error\" });\n            });\n    };\n\n    const parseModelURL = ({ value }) => {\n        if (value === \"-\") return String(value);\n        else\n            return (\n                <a href={value}>\n                    <InsertLinkIcon style={{ height: \"20px\" }}></InsertLinkIcon>\n                </a>\n            );\n    };\n\n    useEffect(() => {\n        getIndividualSubmission();\n        getUserName();\n    }, [auth.isAdmin]);\n\n    const patchhiddenscore = async () => {\n        if (auth.isAdmin) {\n            let submissionID = document.getElementById(\"submission-id\").value;\n            let editValue = document.getElementById(\"edit-value\").value;\n\n            await axios({\n                method: \"patch\",\n                url: `/api/hiddenmodify/${submissionID}&${editTask}&${editValue}`,\n                headers: {\n                    Authorization: \"Bearer \" + auth.token,\n                },\n            })\n                .then((res) => {\n                    swal({ text: res.data.message, icon: \"success\" });\n                    getIndividualSubmission();\n                })\n                .catch((error) => {\n                    swal({ text: \"Internal server error\", icon: \"error\" });\n                });\n        }\n    }\n\n    let columnInfo = track == \"hidden\" ? individual_submission_hidden_columnInfo : individual_submission_columnInfo;\n    let columns = Object.keys(columnInfo).map((key) => {\n        let isScore = columnInfo[key].isScore\n        return {\n            Header: columnInfo[key].header,\n            accessor: key,\n            width: columnInfo[key].width,\n            sortType:\n                columnInfo[key] == \"number\"\n                    ? memoizedNumericSort\n                    : \"alphanumeric\",\n            higherBetter: columnInfo[key].higherBetter,\n            isScore: isScore,\n            Cell:\n                key === \"showOnLeaderboard\"\n                    ? parseShowCell\n                    : key === \"modelURL\"\n                        ? parseModelURL\n                        : key === \"download\" && track === \"public\"\n                            ? parseDownload\n                            : ({ value }) => isScore ? (is_number_and_not_nan(value) ? String(Math.round(value * 100) / 100) : \"-\") : (value == undefined ? \"-\" : String(value)),\n        };\n    });\n    columns[0][\"sticky\"] = \"left\";\n\n    const onSubsetChange = (e) => {\n        setSubset(e.target.value);\n\n        // push history\n        const url = new URL(window.location);\n        url.searchParams.set(\"subset\", e.target.value);\n        window.history.pushState({}, '', url);\n    };\n\n    let trimmedColumns, trimmedShownData;\n    let data;\n    if (track == \"hidden\") {\n        if (showAll && auth.isAdmin) {\n            data = entireHiddenSubmissionData;\n        }\n        else {\n            data = shownHiddenData;\n        }\n    }\n    else {\n        data = shownData\n    }\n    [trimmedColumns, trimmedShownData] = overall_metric_adder([\"interpolation\", \"interpolation_p\"], columns, data, subset, memoizedNumericSort)\n    const memoColumns = React.useMemo(() => trimmedColumns);\n\n    const resetbtnstyle = {\n        margin: 10,\n    };\n\n    return (\n        <>\n            <Section anchorKey=\"personal-profile\" margin={theme.spacing(8, \"auto\", 1)}>\n                <Title\n                    title={\"Hello \" + username}\n                    description={\n                        <div>\n                            <p><span>Public submissions: </span><strong>{`${dailyCounts}/day, ${weeklyCounts}/week`}</strong></p>\n                            <p><span>Hidden submissions: </span><strong>{`${hiddenDailyCounts}/day, ${hiddenWeeklyCounts}/week`}</strong></p>\n                        </div>\n                    }\n                />\n                <TextField\n                    required\n                    label=\"Reset your name\"\n                    id=\"name-reset\"\n                    defaultValue={username}\n                    size=\"small\"\n                    color=\"secondary\"\n                    onChange={handleNameOnChange}\n                />\n                <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    className=\"reset-name-btn\"\n                    style={resetbtnstyle}\n                    onClick={handleResetUserName}\n                >\n                    Reset\n                </Button>\n            </Section>\n            <Section anchorKey=\"personal-submission\">\n                <Title\n                    title=\"Submission history\"\n                    description=\"You can check the checkbox to show your submission result(s) on the leaderboard.\"\n                />\n                <Box width=\"90%\" margin=\"auto\">\n                    {\n                        auth.isAdmin &&\n                        <>\n                            <FormControlLabel\n                                control={<Switch checked={showAll} onChange={(e) => { setShowAll(e.target.checked) }} name=\"showAll\" />}\n                                label=\"All Submissions\"\n                            />\n                            <Divider style={{ width: \"600px\", maxWidth: \"80%\", margin: \"auto\" }} />\n                        </>\n                    }\n                    <Box margin={theme.spacing(2, \"auto\", 0.2)}>\n                        <TrackSelect task={task} onTaskChange={onTaskChange} />\n                    </Box>\n                    <Divider style={{ width: \"600px\", maxWidth: \"80%\", margin: \"auto\" }} />\n                    <Box margin={theme.spacing(0.2, \"auto\", 1)}>\n                        <SubsetSelect subset={subset} selections={[\"Paper\", \"Public Set\", \"Hidden Dev Set\"]} onChange={onSubsetChange} />\n                    </Box>\n                </Box>\n                <Table columns={memoColumns} data={trimmedShownData} {...props} />\n                {\n                    auth.isAdmin &&\n                    <Section>\n                        <Box margin=\"10px\">\n                            <Title\n                                title=\"Edit Hidden Score\"\n                                description=\"Great power comes with great responsibility.\"\n                            />\n                            <FormControl style={{ margin: \"10px\" }}>\n                                <InputLabel style={{ color: grey[600] }} htmlFor=\"submission-id\">Submission ID</InputLabel>\n                                <Input id=\"submission-id\" />\n                            </FormControl>\n                            <FormControl style={{ width: \"200px\", margin: \"10px\" }}>\n                                <InputLabel id=\"demo-customized-select-label\">Task</InputLabel>\n                                <Select\n                                    labelId=\"demo-customized-select-label\"\n                                    id=\"demo-customized-select\"\n                                    value={editTask}\n                                    onChange={(e) => { setEditTask(e.target.value) }}\n                                >\n                                    {\n                                        Object.keys(individual_submission_hidden_columnInfo).map((key) => {\n                                            return (\n                                                individual_submission_hidden_columnInfo[key].isScore &&\n                                                <MenuItem value={key}>{key}</MenuItem>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ margin: \"10px\" }}>\n                                <InputLabel style={{ color: grey[600] }} htmlFor=\"edit-value\">Edit Value</InputLabel>\n                                <Input id=\"edit-value\" />\n                            </FormControl>\n                        </Box>\n                        <Button color=\"primary\" variant=\"contained\" onClick={patchhiddenscore}>Edit</Button>\n                    </Section>\n                }\n            </Section>\n        </>\n    );\n}\n\nexport default Profile;\n","import { useState, useCallback, useEffect } from \"react\";\nimport { useGoogleLogout } from \"react-google-login\";\n\nlet logoutTimer;\n\nconst clientId =\n    \"796679159105-6335p2q2ub5pr15lnf3g2cqkhnucmvkl.apps.googleusercontent.com\";\n\nexport const useAuth = () => {\n    const [token, setToken] = useState(false);\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [email, setEmail] = useState(null);\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\n\n    const onFailure = () => {};\n    const onLogoutSuccess = () => {};\n    const { signOut } = useGoogleLogout({\n        clientId,\n        onLogoutSuccess,\n        onFailure,\n    });\n\n    const login = useCallback((token, expirationDate, isAdmin, email) => {\n        const tokenExpirationDate =\n            expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n        isAdmin = isAdmin || false;\n        email = email || null;\n\n        setToken(token);\n        setTokenExpirationDate(tokenExpirationDate);\n        setIsAdmin(isAdmin);\n        setEmail(email);\n        localStorage.setItem(\n            \"data\",\n            JSON.stringify({\n                token: token,\n                expiration: tokenExpirationDate.toISOString(),\n                isAdmin: isAdmin,\n                email: email,\n            })\n        );\n    }, []);\n\n    const logout = useCallback(() => {\n        signOut();\n        setToken(null);\n        setTokenExpirationDate(null);\n        setIsAdmin(false);\n        setEmail(null);\n        localStorage.removeItem(\"data\");\n    }, []);\n\n    useEffect(() => {\n        if (token && tokenExpirationDate) {\n            const remainingTime =\n                tokenExpirationDate.getTime() - new Date().getTime();\n            logoutTimer = setTimeout(logout, remainingTime);\n        } else {\n            clearTimeout(logoutTimer);\n        }\n    }, [token, logout, tokenExpirationDate]);\n\n    useEffect(() => {\n        const storedData = JSON.parse(localStorage.getItem(\"data\"));\n        if (\n            storedData &&\n            storedData.token &&\n            new Date(storedData.expiration) > new Date() &&\n            storedData.email\n        ) {\n            login(storedData.token, new Date(storedData.expiration), storedData.isAdmin, storedData.email);\n        }\n        else {\n            logout()\n        }\n    }, [login]);\n\n    return { token, isAdmin, email, login, logout };\n};\n","import { useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useMarkdown } from \"./hooks/markdown-file\";\nimport MarkdownBlock from \"./components/MarkdownBlock\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function TaskDetails() {\n  let { name } = useParams();\n  const theme = useTheme();\n  const { markdownText, fetchMarkdownText } = useMarkdown(\n    `https://raw.githubusercontent.com/dynamic-superb/dynamic-superb/main/dynamic_superb/benchmark_tasks/${name}/README.md`\n  );\n\n  useEffect(() => {\n    fetchMarkdownText(\n      `https://raw.githubusercontent.com/dynamic-superb/dynamic-superb/main/dynamic_superb/benchmark_tasks/${name}/README.md`\n    );\n  }, [name]);\n\n  return markdownText ? (\n    <Box margin={theme.spacing(8, 0)} textAlign=\"center\">\n      <MarkdownBlock mdFile={markdownText} />\n    </Box>\n  ) : (\n    <></>\n  );\n}\n","import { useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useMarkdown } from \"./hooks/markdown-file\";\nimport MarkdownBlock from \"./components/MarkdownBlock\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function Docs() {\n  let { title } = useParams();\n  const theme = useTheme();\n  const docsList = [\n    \"ablation-studies\",\n    \"call-for-tasks\",\n    \"keywords\",\n    \"leaderboard\",\n    \"leaderboard-gpt-evaluation\",\n    \"metric-guidelines\",\n    \"review-process\",\n    \"score-submission\",\n    \"task-list\",\n    \"task-proposal\",\n    \"task-submission\",\n  ];\n\n  const { markdownText, fetchMarkdownText } = useMarkdown(\n    docsList.includes(title)\n      ? `https://raw.githubusercontent.com/dynamic-superb/dynamic-superb/main/docs/${title.replace(\n          /-/g,\n          \"_\"\n        )}.md`\n      : null\n  );\n\n  useEffect(() => {\n    fetchMarkdownText(\n      docsList.includes(title)\n        ? `https://raw.githubusercontent.com/dynamic-superb/dynamic-superb/main/docs/${title.replace(\n            /-/g,\n            \"_\"\n          )}.md`\n        : null\n    );\n  }, [title]);\n\n  return markdownText ? (\n    <Box margin={theme.spacing(8, 0)} textAlign=\"center\">\n      <MarkdownBlock mdFile={markdownText} />\n    </Box>\n  ) : (\n    <></>\n  );\n}\n","import \"./App.css\";\nimport React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\nimport {\n    useTheme,\n    ThemeProvider,\n    makeStyles,\n    createMuiTheme,\n} from \"@material-ui/core/styles\";\n\nimport Landing from \"./Landing\";\nimport Tasks from \"./Tasks\";\nimport NavigationBar from \"./components/NavigationBar\";\nimport LeaderBoard from \"./Leaderboard\";\nimport Login from \"./components/Login\";\nimport Logout from \"./components/Logout\";\nimport SubmitForm from \"./components/SubmitForm\";\nimport Profile from \"./Profile\";\nimport { mainTheme } from \"./components/Theme\";\nimport { AuthContext } from \"./context/auth-context\";\nimport { useAuth } from \"./hooks/auth-hook\";\nimport { useContext } from \"react\";\nimport TaskDetails from \"./TaskDetails\";\nimport Docs from \"./Docs\";\n\nconst useStyles = makeStyles((theme) => ({\n    narrowViewport: {\n        width: \"85%\",\n        maxWidth: 900,\n        margin: \"auto\",\n    },\n    LoginButton: {\n        height: \"30vh\",\n        paddingTop: \"10vh\",\n    },\n}));\n\nfunction App() {\n    const [width, setWidth] = React.useState(0);\n    const [height, setHeight] = React.useState(0);\n    const [navbarHeight, setNavbarHeight] = React.useState(0);\n    const tableControlRef = React.useRef(null);\n\n    const setViewPort = () => {\n        setWidth(window.innerWidth);\n        setHeight(window.innerHeight);\n        setNavbarHeight(document.getElementById(\"navbar\").offsetHeight);\n    };\n    React.useEffect(setViewPort);\n    window.addEventListener(\"resize\", setViewPort);\n\n    const classes = useStyles();\n    let routes = (\n        <Switch>\n            <Route path=\"/\" exact>\n                <div className={`${classes.narrowViewport}`}>\n                    <Landing />\n                </div>\n            </Route>\n            <Route path=\"/tasks\">\n                <div className={`${classes.narrowViewport}`}>\n                    <Tasks />\n                </div>\n            </Route>\n            <Redirect from='/task/' to='/tasks' exact />\n            <Route path=\"/task/:name\">\n                <div className={`${classes.narrowViewport}`}>\n                    <TaskDetails />\n                </div>\n            </Route>\n            <Route path=\"/docs/:title\">\n                <div className={`${classes.narrowViewport}`}>\n                    <Docs />\n                </div>\n            </Route>\n            <Route path=\"/leaderboard\">\n                <div>\n                    <LeaderBoard />\n                </div>\n            </Route>\n            {/*<Route path=\"/leaderboard\">\n                <Leaderboard\n                    height={`${height - navbarHeight}px`}\n                    tableControlRef={tableControlRef}\n                />\n            </Route>*/}\n        </Switch>\n    );\n    return (\n        <div className=\"App\">\n            <Router>\n                <div id=\"top\"></div>\n                <div id=\"navbar\">\n                    <NavigationBar tableControlRef={tableControlRef} />\n                </div>\n                {routes}\n            </Router>\n        </div>\n    );\n}\n\nexport default () => {\n    const { token, isAdmin, email, login, logout } = useAuth();\n    return (\n        <ThemeProvider theme={createMuiTheme(mainTheme)}>\n            <App />\n        </ThemeProvider>\n    );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './override.css'\nimport { hydrate, render } from \"react-dom\";\n \nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}"],"sourceRoot":""}